@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix obt: <https://w3id.org/ontoboldt/ns/ontoboldt#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix dc: <http://purl.org/dc/terms/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dul: <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#> .
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix schema: <http://schema.org/> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix cc: <http://creativecommons.org/ns#> .
@prefix frbr: <http://purl.org/vocab/frbr/core#> .
@prefix obtenv: <https://w3id.org/ontoboldt/ns/engineering-vocabulary#> .

<http://idlab.technology/#organization> rdf:type org:OrganizationalUnit, foaf:Organization, foaf:Group, org:Organization, foaf:Agent, dcterms:Agent ;
	dcterms:title "IDLab"@en ;
	schema:name "IDLab"@en ;
	rdfs:label "IDLab"@en ;
	foaf:name "IDLab"@en ;
	owl:sameAs <http://idlab.technology/#organization> ;
	foaf:isPrimaryTopicOf <http://idlab.ugent.be/>, <http://idlab.technology/> ;
	foaf:page <http://idlab.ugent.be/>, <http://idlab.technology/> ;
	foaf:homepage <http://idlab.ugent.be/>, <http://idlab.technology/> ;
	org:hasMember <https://sven-lieber.org/profile#me> ;
	foaf:member <https://sven-lieber.org/profile#me> ;
	org:subOrganizationOf <http://dbpedia.org/resource/IMEC>, <http://dbpedia.org/resource/Ghent_University> ;
	org:transitiveSubOrganizationOf <http://dbpedia.org/resource/IMEC>, <http://dbpedia.org/resource/Ghent_University> ;
	org:unitOf <http://dbpedia.org/resource/IMEC>, <http://dbpedia.org/resource/Ghent_University> .

<http://dbpedia.org/resource/Ghent_University> rdf:type foaf:Organization, foaf:Group, <http://www.wikidata.org/entity/Q43229>, <http://www.wikidata.org/entity/Q3918>, org:Organization, org:FormalOrganization, dul:SocialPerson, schema:Organization, schema:EducationalOrganization, schema:CollegeOrUniversity, <http://dbpedia.org/ontology/University>, <http://dbpedia.org/ontology/Organisation>, <http://dbpedia.org/ontology/EducationalInstitution>, <http://dbpedia.org/ontology/College>, foaf:Agent, dul:Agent, dcterms:Agent, <http://dbpedia.org/ontology/Agent> ;
	dcterms:title "Universiteit Gent"@nl, "Ghent University"@en ;
	schema:name "Universiteit Gent"@nl, "Ghent University"@en ;
	rdfs:label "Universiteit Gent"@nl, "Ghent University"@en ;
	foaf:name "Universiteit Gent"@nl, "Ghent University"@en ;
	owl:sameAs <http://dbpedia.org/resource/Ghent_University> ;
	foaf:isPrimaryTopicOf <http://www.ugent.be/> ;
	foaf:page <http://www.ugent.be/> ;
	foaf:homepage <http://www.ugent.be/> ;
	org:hasMember <https://sven-lieber.org/profile#me> ;
	org:hasSubOrganization <http://idlab.technology/#organization> ;
	org:hasUnit <http://idlab.technology/#organization> ;
	foaf:member <https://sven-lieber.org/profile#me> .

<http://dbpedia.org/resource/IMEC> rdf:type foaf:Organization, foaf:Group, org:Organization, org:FormalOrganization, foaf:Agent, dcterms:Agent ;
	dcterms:title "imec"@en ;
	schema:name "imec"@en ;
	rdfs:label "imec"@en ;
	foaf:name "imec"@en ;
	owl:sameAs <http://dbpedia.org/resource/IMEC> ;
	foaf:isPrimaryTopicOf <https://www.imec-int.com/> ;
	foaf:page <https://www.imec-int.com/> ;
	foaf:homepage <https://www.imec-int.com/> ;
	org:hasMember <https://sven-lieber.org/profile#me> ;
	org:hasSubOrganization <http://idlab.technology/#organization> ;
	org:hasUnit <http://idlab.technology/#organization> ;
	foaf:member <https://sven-lieber.org/profile#me> .

obt:void rdf:type void:DatasetDescription ;
	dcterms:title "A VoID Description of the Ontoboldt Knowledge Graph" ;
	dcterms:creator <https://sven-lieber.org/profile#me> ;
	foaf:primaryTopic obt:dataset .

<https://sven-lieber.org/profile#me> rdf:type foaf:Person ;
	foaf:mbox "mailto:Sven.Lieber@UGent.be" ;
	foaf:name "Sven Lieber"@en ;
	rdfs:label "Sven Lieber"@en .

obt:dataset rdf:type void:Dataset ;
	foaf:page <https://w3id.org/ontoboldt> ;
	dcterms:description "A Knowledge Graph containing descriptions of Ontology Engineering processes, activities and tasks." ;
	dcterms:creator <https://sven-lieber.org/profile#me> ;
	dcterms:publisher <https://sven-lieber.org/profile#me> ;
	dcterms:contributor <http://dbpedia.org/resource/IMEC>, <http://dbpedia.org/resource/Ghent_University>, <http://idlab.technology/#organization> ;
	dcterms:created "2016-12-15"^^xsd:date ;
	dcterms:issued "2016-12-15"^^xsd:date ;
	dcterms:modified "2019-2-5"^^xsd:date ;
	vann:preferredNamespacePrefix "obt" ;
	vann:preferredNamespaceUri "https://w3id/ontoboldt/ns/ontoboldt#" ;
	cc:license <http://creativecommons.org/publicdomain/zero/1.0/> ;
	dcterms:rights "Copyright © Ghent University – imec – IDLab"@en ;
	void:feature <http://www.w3.org/ns/formats/Turtle> .

obt:Activity_A1 rdf:type obtenv:Activity ;
	dcterms:description "the activity of finding the correspondences between two or more ontologies and storing/exploiting them. A synonym for this activity is Ontology Mapping."@en ;
	frbr:realizationOf obt:Procedure_P9 ;
	rdfs:label "Ontology Mapping or Aligning Activity NeOn"@en .

obt:Activity_A10 rdf:type obtenv:Activity ;
	dcterms:description "the collection of documents and explanatory comments generated during the entire ontology building process. Note: Examples of documents external to the implemented ontology include ontology specification documents, sources used for acquiring knowledge, ontology conceptualization document, design and decision criteria, ontological commitments, etc."@en ;
	frbr:realizationOf obt:Procedure_P18 ;
	rdfs:label "Ontology Documentation Activity NeOn"@en .

obt:Activity_A11 rdf:type obtenv:Activity ;
	dcterms:description "a knowledge acquisition activity in which conceptual structures (e.g. T-Box) and their instances (e.g. A-Box) are acquired from domain experts."@en ;
	frbr:realizationOf obt:Procedure_P19 ;
	rdfs:label "Ontology Elicitation Activity NeOn"@en .

obt:Activity_A12 rdf:type obtenv:Activity ;
	dcterms:description "the activity of extending an ontology wiht new conceptual structures (e.g., concepts, roles, axioms, etc.)."@en ;
	frbr:realizationOf obt:Procedure_P20 ;
	rdfs:label "Ontology Enrichment Activity NeOn"@en .

obt:Activity_A13 rdf:type obtenv:Activity ;
	dcterms:description "the activity of analyzing the environment in which the ontology is going to be developed."@en ;
	frbr:realizationOf obt:Procedure_P21 ;
	rdfs:label "Ontology Environment Study Activity NeOn"@en .

obt:Activity_A14 rdf:type obtenv:Activity ;
	dcterms:description "Ontology evaluation refers to the activity of checking the technical quality of an ontology against a frame of reference."@en ;
	frbr:realizationOf obt:Procedure_P22 ;
	rdfs:label "Ontology Evaluation Activity NeOn"@en .

obt:Activity_A15 rdf:type obtenv:Activity ;
	dcterms:description "the activity of facilitating the modification of an ontology by preserving its consistency."@en ;
	frbr:realizationOf obt:Procedure_P23 ;
	rdfs:label "Ontology Evolution Activity NeOn"@en .

obt:Activity_A16 rdf:type obtenv:Activity ;
	dcterms:description "an ontology enrichment activity for stretching the ontology in width."@en ;
	frbr:realizationOf obt:Procedure_P24 ;
	rdfs:label "Ontology Extension Activity NeOn"@en .

obt:Activity_A17 rdf:type obtenv:Activity ;
	dcterms:description "the activity of answering questions like: is it possible to build the ontology? is it suitable to build the ontology?, etc."@en ;
	frbr:realizationOf obt:Procedure_P25 ;
	rdfs:label "Ontology Feasibility Study Activity NeOn"@en .

obt:Activity_A18 rdf:type obtenv:Activity ;
	dcterms:description "the transformation of a conceptual model into a formal or semi-computable model according to a knowledge representation paradigm (e.g., description logics, frames, rules, etc.)."@en ;
	frbr:realizationOf obt:Procedure_P26 ;
	rdfs:label "Ontology Formalization Activity NeOn"@en .

obt:Activity_A19 rdf:type obtenv:Activity ;
	dcterms:description "the activity of outputting a new implementation of the ontology on the basis of the new conceptual model."@en ;
	frbr:realizationOf obt:Procedure_P27 ;
	rdfs:label "Ontology Forward Engineering Activity NeOn"@en .

obt:Activity_A2 rdf:type obtenv:Activity ;
	dcterms:description "the activity of enriching the ontology with additional information, e.g. metadata or comments."@en ;
	frbr:realizationOf obt:Procedure_P10 ;
	rdfs:label "Ontology Annotation Activity NeOn"@en .

obt:Activity_A20 rdf:type obtenv:Activity ;
	dcterms:description "the activity of generating computable models according to the syntax of a formal representation language (e.g. RDF(s), OWL, FLogic, etc.)."@en ;
	frbr:realizationOf obt:Procedure_P28 ;
	rdfs:label "Ontology Implementation Activity NeOn"@en .

obt:Activity_A21 rdf:type obtenv:Activity ;
	dcterms:description "the activity of including one ontology in another ontology."@en ;
	frbr:realizationOf obt:Procedure_P29 ;
	rdfs:label "Ontology Integration Activity NeOn"@en .

obt:Activity_A22 rdf:type obtenv:Activity ;
	dcterms:description "activities for capturing knowledge (e.g., T-Box and A-Box) from a variety of sources (e.g., documents, experts, data bases, etc.). We can distinguish between: Ontology Elicitation, Ontology Learning and Ontology Population."@en ;
	frbr:realizationOf obt:Procedure_P30 ;
	rdfs:label "Knowledge Acquisition for Ontologies Activity NeOn"@en .

obt:Activity_A23 rdf:type obtenv:Activity ;
	dcterms:description "Ontology Learning is a knowledge acquisition activity that relies on (semi-) automatic methods to transform unstructured (e.g. corpora), semi-structured (e.g. folksonomies, html pages, etc.) and structured data sources (e.g. data bases) into conceptual structures (e.g. T-Box)."@en ;
	frbr:realizationOf obt:Procedure_P31 ;
	rdfs:label "Ontology Learning Activity NeOn"@en .

obt:Activity_A24 rdf:type obtenv:Activity ;
	dcterms:description "the adaption of an ontology to a particular language and culsture."@en ;
	frbr:realizationOf obt:Procedure_P32 ;
	rdfs:label "Ontology Localization Activity NeOn"@en .

obt:Activity_A25 rdf:type obtenv:Activity ;
	dcterms:description " the activity of finding or discovering relationships or correspondences beetween entities of different ontologies or ontology modules. Note: Ontology matching can be seen as the first stage of Ontology Aligning."@en ;
	frbr:realizationOf obt:Procedure_P33 ;
	rdfs:label "Ontology Matching Activity NeOn"@en .

obt:Activity_A26 rdf:type obtenv:Activity ;
	dcterms:description "the activity of creating a new ontology or ontology module from two or more, possibly overlapping, source ontologies or ontology modules."@en ;
	frbr:realizationOf obt:Procedure_P34 ;
	rdfs:label "Ontology Merging Activity NeOn"@en .

obt:Activity_A27 rdf:type obtenv:Activity ;
	dcterms:description "the activity of changing the ontology, without considering the consistency."@en ;
	frbr:realizationOf obt:Procedure_P35 ;
	rdfs:label "Ontology Modification Activity NeOn"@en .

obt:Activity_A28 rdf:type obtenv:Activity ;
	dcterms:description "the activity of identifying one or more modules in an ontology with the purpose of supporting reuse or maintenance. Note: We can make distinctions between: Ontology Module Extraction and Ontology Partitioning."@en ;
	frbr:realizationOf obt:Procedure_P36 ;
	rdfs:label "Ontology Modularization Activity NeOn"@en .

obt:Activity_A29 rdf:type obtenv:Activity ;
	dcterms:description "the activity of obtaining from an ontology concrete modules to be used for a particular pupose (e.g. to contain a particular sub-vocabulary of the original ontology)."@en ;
	frbr:realizationOf obt:Procedure_P37 ;
	rdfs:label "Ontology Module Extraction Activity NeOn"@en .

obt:Activity_A3 rdf:type obtenv:Activity ;
	dcterms:description "the activity of checking an ontology against user requirements, such as usability, usefulness, abstraction, quality, etc."@en ;
	frbr:realizationOf obt:Procedure_P11 ;
	rdfs:label "Ontology Assessment Activity NeOn"@en .

obt:Activity_A30 rdf:type obtenv:Activity ;
	dcterms:description "the activity of dividing an ontology into a set of (not necessary disjoint) modules that together form an ontology and that can be treated separately."@en ;
	frbr:realizationOf obt:Procedure_P38 ;
	rdfs:label "Ontology Partitioning Activity NeOn"@en .

obt:Activity_A31 rdf:type obtenv:Activity ;
	dcterms:description "a knowledge acquisition activity that relies on (semi-) automatic methods to transform unstructured (e.g. corpora), semi-structured (e.g. folksonomies, html pages, etc.) and structured data sources (e.g. data bases) into instance data (e.g. A-Box)."@en ;
	frbr:realizationOf obt:Procedure_P39 ;
	rdfs:label "Ontology Population Activity NeOn"@en .

obt:Activity_A32 rdf:type obtenv:Activity ;
	dcterms:description " the activity of discarding conceptual structures (e.g., part of T-Box) of a given ontology that are not or no longer relevant. Note: Pruning is mostly used in combination with ontology learning methods to discard potentially irrelevant learned concepts/relations."@en ;
	frbr:realizationOf obt:Procedure_P40 ;
	rdfs:label "Ontology Pruning Activity NeOn"@en .

obt:Activity_A33 rdf:type obtenv:Activity ;
	dcterms:description "the activity of assuring that the quality of each and every process carried out and product built (ontology, software and documentation) is satisfactory."@en ;
	frbr:realizationOf obt:Procedure_P41 ;
	rdfs:label "Ontology Quality Assurance Activity NeOn"@en .

obt:Activity_A35 rdf:type obtenv:Activity ;
	dcterms:description "the activity of correcting and reorganizing the knowledge contained in an initial conceptual model, and detecting missing knowledge. Note: This process contains two phases: analysis and synthesis. The ''analysis phase goal'' is to evaluate the ontology technically, that is, to check that the hierarchy of the ontology and its classes, instances, relations and functions are complete (contain all the definitions required for the domain of chemical substances), consistent (there are no contradictions in the ontology and with respect to the knowledge sources used), concise (there are no explicit and implicit redundancies) and syntactically correct. The ''synthesis phase'' seeks to correct the ontology after the analysis phase and document any changes made."@en ;
	frbr:realizationOf obt:Procedure_P43 ;
	rdfs:label "Ontology Restructuring Activity NeOn"@en .

obt:Activity_A36 rdf:type obtenv:Activity ;
	dcterms:description " the activity of resolving errors (incompleteness, incorrecteness) in the ontology and it is triggered by ontology diagnosis."@en ;
	frbr:realizationOf obt:Procedure_P44 ;
	rdfs:label "Ontology Repair Activity NeOn"@en .

obt:Activity_A37 rdf:type obtenv:Activity ;
	dcterms:description "The activity of outputting a possible conceptual model on the basis of the code in which the ontology is implemented."@en ;
	frbr:realizationOf obt:Procedure_P45 ;
	rdfs:label "Ontology Reverse Engineering Activity NeOn"@en .

obt:Activity_A38 rdf:type obtenv:Activity ;
	dcterms:description "The activity of identifying the tasks to be performed during the ontology development, their arrangement, and the time and resources needed for their completion."@en ;
	frbr:realizationOf obt:Procedure_P46 ;
	rdfs:label "Scheduling Activity NeOn"@en .

obt:Activity_A39 rdf:type obtenv:Activity ;
	dcterms:description "The activity of finding candidate ontologies or ontology modules to be reused"@en ;
	frbr:realizationOf obt:Procedure_P47 ;
	rdfs:label "Ontology Search Activity NeOn"@en .

obt:Activity_A4 rdf:type obtenv:Activity ;
	dcterms:description "the activity of finding differences between two or more ontologies or between two or more ontology modules."@en ;
	frbr:realizationOf obt:Procedure_P12 ;
	rdfs:label "Ontology Comparison Activity NeOn"@en .

obt:Activity_A40 rdf:type obtenv:Activity ;
	dcterms:description "The activity of choosing the most suitable ontologies or among those available in an ontology repository or library, for a concrete domain of interest and associated tasks."@en ;
	frbr:realizationOf obt:Procedure_P48 ;
	rdfs:label "Ontology Selection Activity NeOn"@en .

obt:Activity_A41 rdf:type obtenv:Activity ;
	dcterms:description "an ontology enrichment activity for extending the ontology in depth."@en ;
	frbr:realizationOf obt:Procedure_P49 ;
	rdfs:label "Ontology Specialization Activity NeOn"@en .

obt:Activity_A42 rdf:type obtenv:Activity ;
	dcterms:description "The activity of collecting the requirements that the ontology should fulfill, e.g. reasons to build the ontology, target group, intended uses, possibly reached through a consensus process."@en ;
	frbr:realizationOf obt:Procedure_P50 ;
	rdfs:label "Ontology Specification Activity NeOn"@en .

obt:Activity_A43 rdf:type obtenv:Activity ;
	dcterms:description "the activity of providing an abstract or summary of the ontology content. Note: The summary can include, for example, a couple of top levels in the ontology class hierarchy (perhaps a graphical representation of these top-level concepts and links between them)."@en ;
	frbr:realizationOf obt:Procedure_P51 ;
	rdfs:label "Ontology Summarization Activity NeOn"@en .

obt:Activity_A44 rdf:type obtenv:Activity ;
	dcterms:description "the activity of changing the representation formalism or language of an ontology from one to another. Note: Ontology Translation can be part of an ontology reengineering process."@en ;
	frbr:realizationOf obt:Procedure_P52 ;
	rdfs:label "Ontology Translation Activity NeOn"@en .

obt:Activity_A45 rdf:type obtenv:Activity ;
	dcterms:description "minor changes carried out in an ontology that could not be considered an upgrade."@en ;
	frbr:realizationOf obt:Procedure_P53 ;
	rdfs:label "Ontology Update Activity NeOn"@en .

obt:Activity_A46 rdf:type obtenv:Activity ;
	dcterms:description "the activity of replacing an existing ontology with a new version."@en ;
	frbr:realizationOf obt:Procedure_P54 ;
	rdfs:label "Ontology Upgrade Activity NeOn"@en .

obt:Activity_A47 rdf:type obtenv:Activity ;
	dcterms:description "the ontology evaluation that compares the meaning of the ontology definitions against the intended model of the world aiming to conceptualize. Note: It answers the question: Are you producing the right ontology?."@en ;
	frbr:realizationOf obt:Procedure_P55 ;
	rdfs:label "Ontology Validation Activity NeOn"@en .

obt:Activity_A48 rdf:type obtenv:Activity ;
	dcterms:description "the ontology evaluation which compares the ontology against the ontology specification document (ontology requirements and competency questions), thus ensuring that the ontology is built correctly (in compliance with the ontology specification). Note: It answers the question: Are you producing the ontology right?."@en ;
	frbr:realizationOf obt:Procedure_P56 ;
	rdfs:label "Ontology Verification Activity NeOn"@en .

obt:Activity_A49 rdf:type obtenv:Activity ;
	dcterms:description "the activity of handling ontology changes by creating and managing different versions of the ontology [1]. -- [1]  L. Stojanovic. Methods and Tools for Ontology Evolution. Dissertation. 2004. Referee: Rudi Studer, Christof Weinhardt, Asunci�n G�mez-P�rez. "@en ;
	frbr:realizationOf obt:Procedure_P57 ;
	rdfs:label "Ontology Versioning Activity NeOn"@en .

obt:Activity_A5 rdf:type obtenv:Activity ;
	dcterms:description "the activity of organizing and structuring the information (data, knowledge, etc.), obtained during the acquisition process, into meaningful models at the knowledge level according to the ontology specification document. This activity is independent of the way in which the ontology implementation will be carried out."@en ;
	frbr:realizationOf obt:Procedure_P13 ;
	rdfs:label "Ontology Conceptualization Activity NeOn"@en .

obt:Activity_A50 rdf:type obtenv:Activity ;
	dcterms:description "the activity of using ontology design patterns in the solution of different modelling problems during the development of new ontologies"@en ;
	frbr:realizationOf obt:Procedure_P68 ;
	rdfs:label "Ontology Design Pattern Reuse Activity NeOn"@en .

obt:Activity_A51 rdf:type obtenv:Activity ;
	dcterms:description "The goal of ontology module assessment is to find out which ontology modules, from the set of candidate ontology modules, are useful for the development of the ontology network."@en ;
	frbr:realizationOf obt:Procedure_P59 ;
	rdfs:label "Ontology Module Assessment Activity NeOn"@en .

obt:Activity_A52 rdf:type obtenv:Activity ;
	dcterms:description "The objective of this activity is to find out which ontology modules are the most suitable for the development of the ontology network."@en ;
	frbr:realizationOf obt:Procedure_P60 ;
	rdfs:label "Ontology Module Selection Activity NeOn"@en .

obt:Activity_A53 rdf:type obtenv:Activity ;
	dcterms:description "The objective of this activity is to integrate the ontology modules selected in the ontology network being developed."@en ;
	frbr:realizationOf obt:Procedure_P61 ;
	rdfs:label "Ontology Module Integration Activity NeOn"@en .

obt:Activity_A54 rdf:type obtenv:Activity ;
	dcterms:description "The objective of this activity is to search in libraries, repositories and registries for candidate domain ontologies that could satisfy the needs of the ontology network being developed."@en ;
	frbr:realizationOf obt:Procedure_P62 ;
	rdfs:label "Domain Ontology Search Activity NeOn"@en .

obt:Activity_A55 rdf:type obtenv:Activity ;
	dcterms:description "The objective of this activity is to find out if the set of candidate domain ontologies are useful for the development of the ontology network."@en ;
	frbr:realizationOf obt:Procedure_P63 ;
	rdfs:label "Domain Ontology Assessment Activity NeOn"@en .

obt:Activity_A56 rdf:type obtenv:Activity ;
	dcterms:description "The objective of this activity is to find out which domain ontologies are the most suitable for the development of the ontology network."@en ;
	frbr:realizationOf obt:Procedure_P64 ;
	rdfs:label "Domain Ontology Selection Activity NeOn"@en .

obt:Activity_A57 rdf:type obtenv:Activity ;
	dcterms:description "The objective of this activity is to integrate the selected domain ontologies in the ontology network being developed."@en ;
	frbr:realizationOf obt:Procedure_P65 ;
	rdfs:label "Domain Ontology Integration Activity NeOn"@en .

obt:Activity_A58 rdf:type obtenv:Activity ;
	dcterms:description "The goal of this activity is to search the internet for candidate ontology statements that could satisfy the ontological needs in a particular case"@en ;
	frbr:realizationOf obt:Procedure_P66 ;
	rdfs:label "Ontology Statement Search Activity NeOn"@en .

obt:Activity_A59 rdf:type obtenv:Activity ;
	dcterms:description "The goal of this activity is to decide if a concrete ontology statement is useful or not for the ontology network being developed."@en ;
	frbr:realizationOf obt:Procedure_P67 ;
	rdfs:label "Ontology Statement Assessment Activity NeOn"@en .

obt:Activity_A6 rdf:type obtenv:Activity ;
	dcterms:description "the activity of recording all the versions of the documentation, software and ontology code, and of controling the changes"@en ;
	frbr:realizationOf obt:Procedure_P14 ;
	rdfs:label "Ontology Configuration Management Activity NeOn"@en .

obt:Activity_A60 rdf:type obtenv:Activity ;
	dcterms:description "The goal of this activity is to decide between the useful ontology statements which ones are the best or most convenient for the ontology network being developed."@en ;
	frbr:realizationOf obt:Procedure_P68 ;
	rdfs:label "Ontology Statement Selection Activity NeOn"@en .

obt:Activity_A61 rdf:type obtenv:Activity ;
	dcterms:description "The goal of this activity is to decide how the selected ontology statements will be integrated in the ontology network being developed"@en ;
	frbr:realizationOf obt:Procedure_P69 ;
	rdfs:label "Ontology Statement Integration Activity NeOn"@en .

obt:Activity_A62 rdf:type obtenv:Activity ;
	dcterms:description "The goal of this activity is to check for local inconsistencies in the ontology network."@en ;
	frbr:realizationOf obt:Procedure_P70 ;
	rdfs:label "Check local inconsistencies Activity NeOn"@en .

obt:Activity_A63 rdf:type obtenv:Activity ;
	dcterms:description "The most important definitions and axioms (e.g. transitivity of part of in mereology), and those that distinguish the different variants of the support theory should be identified."@en ;
	frbr:realizationOf obt:Procedure_P71 ;
	rdfs:label "Common Ontology Selection Activity NeOn"@en .

obt:Activity_A64 rdf:type obtenv:Activity ;
	dcterms:description "Customize the selected common ontology according to the needs of the host ontology."@en ;
	frbr:realizationOf obt:Procedure_P72 ;
	rdfs:label "Common Ontology Customization Activity NeOn"@en .

obt:Activity_A65 rdf:type obtenv:Activity ;
	dcterms:description "The customized common ontology is included in the destination ontology, and the global result is evaluated again, whereas the host ontology is the ontology network which is being developed."@en ;
	frbr:realizationOf obt:Procedure_P73 ;
	rdfs:label "Common Ontology Integration Activity NeOn"@en .

obt:Activity_A66 rdf:type obtenv:Activity ;
	dcterms:description "The ontology development team should study the theory (and its variants) that supports the type of common ontology to be reused"@en ;
	frbr:realizationOf obt:Procedure_P74 ;
	rdfs:label "Carry out the Background Study on the Support Theory Activity NeOn"@en .

obt:Activity_A67 rdf:type obtenv:Activity ;
	dcterms:description "The most important definitions and axioms (e.g. transitivity of part of in mereology), and those that distinguish the different variants of the support theory should be identified"@en ;
	frbr:realizationOf obt:Procedure_P75 ;
	rdfs:label "Identify the most significant definitions and axioms of the support theory Activity NeOn"@en .

obt:Activity_A68 rdf:type obtenv:Activity ;
	dcterms:description "The ontology development team should search for ontologies implemented in a computable language"@en ;
	frbr:realizationOf obt:Procedure_P76 ;
	rdfs:label "Search for common ontologies supported by the theory Activity NeOn"@en .

obt:Activity_A69 rdf:type obtenv:Activity ;
	dcterms:description "It is assumed that each row represents the set of definitions (or axioms) identified in activity 2, and each column, the ontologies found in activity 3"@en ;
	frbr:realizationOf obt:Procedure_P77 ;
	rdfs:label "Build the comparative study Activity NeOn"@en .

obt:Activity_A7 rdf:type obtenv:Activity ;
	dcterms:description "the activity of guaranteeing that scheduled activities in the ontology development process are completed in the manner intended to be performed."@en ;
	frbr:realizationOf obt:Procedure_P15 ;
	rdfs:label "Control Activity NeOn"@en .

obt:Activity_A70 rdf:type obtenv:Activity ;
	dcterms:description "The goal of the activity is to search non-ontological resources from highly reliable Web sites, domain-related sites and resources within organizations. Domain experts, software developers and ontology practitioners carry out this activity taking as input the ontology requirements specification document (ORSD). They use those terms that have a highest frequency in the ORSD to search for candidate non-ontological resources that cover the desired terminology. The activity output is a set of candidate non-ontological resources that might present any of the identified typologies described in D5.4.1 [1]. -- [1] D5.4.1. NeOn Methodology for Building Contextualized Ontology Networks"@en ;
	frbr:realizationOf obt:Procedure_P78 ;
	rdfs:label "Non-ontological resource search"@en .

obt:Activity_A71 rdf:type obtenv:Activity ;
	dcterms:description "The goal of this activity is to assess the set of candidate non-ontological resources. Domain experts, software developers and ontology practitioners carry out this activity taking as input the set of candidate non-ontological resources. We propose to take into account the following criteria: coverage and precision, which are measurable criteria; and consensus, which is a subjective criterion. The activity output is an assessment table that shows the evaluation criteria for every non-ontological resource. Within this activity we propose in this deliverable to include the quality of the non-ontological resource. Quality attributes include: ? Well documentation of the non-ontological resources. ? Lack of anomalies of the non-ontological resource, such redundancies or inconsistencies. ? Reliability of the non-ontological resource, it means analysing whether we can trust in the resource or not. "@en ;
	frbr:realizationOf obt:Procedure_P79 ;
	rdfs:label "Non-ontological resource assessment"@en .

obt:Activity_A72 rdf:type obtenv:Activity ;
	dcterms:description "The goal of this activity is to select the most appropriate non ontological resources. Domain experts, software developers and ontology practitioners carry out this activity taking as input the non ontological resource assessment table. The selection is performed manually and looking for resources with:  � Consensus. This criterion is taken into account in the first place, since if the resource to be reused contains terminology already consensuated by the community, the effort and time spent in finding out the right labels for the ontology terms will decrease considerably.  � High value of coverage. This criterion is taken into account in the second place, because our second concern is to consider most of the identified terms of the ORSD.  � High value of precision. This criterion is taken into account in the third place, because our third concern is the proportion of non ontological lexical entries over the identified terms of the ORSD. The activity output is a ranked list of non ontological resources that to some extend covers the expected domain."@en ;
	frbr:realizationOf obt:Procedure_P86 ;
	rdfs:label "Non-ontological Resource Selection"@en .

obt:Activity_A73 rdf:type obtenv:Activity ;
	dcterms:description "The goal of this activity is to analyze a NOR to identify its underlying components and create representations of the resource at the different levels of abstraction (design, requirements and conceptual). Since NORs can be implemented as XML files, databases or spreadsheets among others, we can consider them as software resources, and therefore, we use the software abstraction levels (implementation, design, requirements and conceptual). Here the requirements and the essential design, structure and content of the NOR must be recaptured."@en ;
	frbr:realizationOf obt:Procedure_P87 ;
	rdfs:label "Non-ontological Resource Reverse Reengineering"@en .

obt:Activity_A74 rdf:type obtenv:Activity ;
	dcterms:description "The goal of this activity is to generate a conceptual model from the NOR. We propose the use of Patterns for Re-engineering Non-Ontological Resources (PR-NOR) to guide the transformation process"@en ;
	frbr:realizationOf obt:Procedure_P91 ;
	rdfs:label "Non-ontological Resource Transformation"@en .

obt:Activity_A75 rdf:type obtenv:Activity ;
	dcterms:description "Capturing requirements consists in specifying the semantic needs and user view of the knowledge to be encoded in the ontology. This activity requires an agreement between application modelers, KEs, and end users [1]. -- [1] I. Jacobson, G. Booch, J. Rumbaugh, The Unified Software Development Process, Addison Wesley, USA, 1999."@en ;
	frbr:realizationOf obt:Procedure_P50 ;
	rdfs:label "Requirements workflow UPON"@en .

obt:Activity_A76 rdf:type obtenv:Activity ;
	dcterms:description "The conceptual analysis concerns the refinement and structuring of the ontology requirements identified in the previous workflow."@en ;
	frbr:realizationOf obt:Procedure_P30 ;
	rdfs:label "Analysis workflow UPON"@en .

obt:Activity_A77 rdf:type obtenv:Activity ;
	dcterms:description "The main goal of this workflow (Fig. 10) is to give an ontological structure to the set of glossary entries gathered in the reference glossary."@en ;
	frbr:realizationOf obt:Procedure_P13 ;
	rdfs:label "Design workflow UPON"@en .

obt:Activity_A78 rdf:type obtenv:Activity ;
	dcterms:description "The purpose of this workflow (Fig. 13) is to encode the ontology in a rigorous, formal language. For this reason, the activities of this workflow are mainly performed by KEs as shown in the expert involvement schema of Fig. 13."@en ;
	frbr:realizationOf obt:Procedure_P28 ;
	rdfs:label "Implementation workflow UPON"@en .

obt:Activity_A79 rdf:type obtenv:Activity ;
	dcterms:description "According to [1], the quality of an ontology is a multidimensional feature. The test workflow (Fig. 15) is conceived to verify the semantic and pragmatic quality of the ontology, since syntactic quality is checked in the previous workflow and social quality can be checked only after its publication. -- [1] A. Burton-Jones, et al., A semiotic metrics suite for assessing the quality of ontologies, Data Knowl. Eng. 55 (2005)."@en ;
	frbr:realizationOf <https://w3id.org/ontoboldt/ns/ontoboldt#Procedure_P55%2C%20%20P56> ;
	rdfs:label "Test workflow UPON"@en .

obt:Activity_A8 rdf:type obtenv:Activity ;
	dcterms:description "the activity of adapting an ontology to a specific user's needs."@en ;
	frbr:realizationOf obt:Procedure_P16 ;
	rdfs:label "Ontology Customization Activity NeOn"@en .

obt:Activity_A80 rdf:type obtenv:Activity ;
	dcterms:description "OEs collect all the information about a specific domain, with the help of DEs, in order to build a modelet formalising the domain in consideration, following certain ontology development principles, and then create a new test case that includes the modelet. If everything works fine (i.e., all model, data and query test are passed) release a milestone and proceed;"@en ;
	frbr:realizationOf obt:Procedure_P129 ;
	rdfs:label "Define a new Test-case SAMOD"@en .

obt:Activity_A81 rdf:type obtenv:Activity ;
	dcterms:description "OEs merge the modelet of the new test case with the current model produced by the end of the last process iteration, and consequently update all the test cases in BoT specifying the new current model as TBox. If everything works fine (i.e., all model, data and query test are passed according to their formal requirements only) release a milestone and proceed;"@en ;
	frbr:realizationOf obt:Procedure_P130 ;
	rdfs:label "Merge the current model with the modelet SAMOD"@en .

obt:Activity_A82 rdf:type obtenv:Activity ;
	dcterms:description "OEs refactor the current model, in particular focussing on the last part added in the previous step, taking into account good practices for ontology development processes. If everything works fine (i.e., all model, data and query test are passed) release a milestone. In case there is another motivating scenario to be addressed, iterate the process, otherwise stop. In the last step, OEs work to refactor the current model, shared among all the test cases in BoT, and, accordingly, each ABox and SQ of each test case, if needed. In doing that task, OEs must strictly follow the following principles: � Reuse existing knowledge. Reusing concepts and relations defined in other models is encouraged and often labelled as a common good practice [1]. The reuse can result either in including external entities in the current model as they are or in providing an alignment (An alignment is set of correspondences between entities belonging to two models different models. ) or an harmonisation (harmonisation is the process of modifying a model (and also to align it, if necessary) to fully fit or include it into another model. ) with another model. � Document it. Adding annotations � i.e., labels (i.e., rdfs:label), comments (i.e., rdfs:comment), and provenance information (i.e., rdfs:isDefinedBy) � on ontological entities, so as to provide natural language descriptions of them, using at least one language (e.g., English). It is an important aspect to take into consideration, since there are several tools available, e.g., LODE [2], that are able to process an ontology in source format and to produce an HTML human-readable documentation of it starting from the annotations it has specified. � Take advantages from technologies. When possible, enriching the current model by using all the capabilities offered by the formal language in which it is developed � e.g., when using OWL 2 DL: keys, property characteristics (transitivity, symmetry, etc.), property chains, inverse properties and the like � in order to infer automatically as much information as possible starting from a (possible) small set of real data. In particular, it is important to avoid over-classifications, for instance by specifying assertions that may be automatically inferred by a reasoner � e.g., in creating an inverse property of a property P it is not needed to define explicitly its domain and range because they will be inferred from P itself. -- [1] Uschold, M., & King, M. (1995). Towards a Methodology for Building Ontologies. In Workshop on Basic Ontological Issues in Knowledge Sharing. http://www.aiai. ed.ac.uk/publications/documents/1995/95-ont-ijcai95-ont-method.pdf [2] Peroni, S., Shotton, D., Vitali, F. (2012). The Live OWL Documentation Environment: a tool for the automatic generation of ontology documentation. In Proceedings of the 18th International Conference on Knowledge Engineering and Knowledge Management (EKAW 2012): 398�412. http://dx.doi.org/10.1007/978-3-642-33876-2_35 "@en ;
	frbr:realizationOf obt:Procedure_P131 ;
	rdfs:label "Refactor the current model SAMOD"@en .

obt:Activity_A9 rdf:type obtenv:Activity ;
	dcterms:description "the activity of identifying parts of the ontology directly responsible for incorrectness and incompleteness. Ontology diagnosis is triggered by ontology validation."@en ;
	frbr:realizationOf obt:Procedure_P17 ;
	rdfs:label "Ontology Diagnosis Activity NeOn"@en .

obt:Glossary_Activity rdf:type obtenv:Glossary ;
	dcterms:description "Set of cohesive tasks of a process"@en ;
	rdfs:label "Activity"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#Glossary_Information%20item> rdf:type obtenv:Glossary ;
	dcterms:description "Separately identifiable body of information that is produced and stored for human use during a system or software life cycle"@en ;
	rdfs:label "Information item"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#Glossary_Life%20cycle> rdf:type obtenv:Glossary ;
	dcterms:description "Evolution of a system, product, service, project or other human-made entity from conception through retirement."@en ;
	rdfs:label "Life cycle"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#Glossary_Life%20cycle%20model> rdf:type obtenv:Glossary ;
	dcterms:description "Framework of processes and activities concerned with the life cycle that may be organized into stages, which also acts as a common reference for communication and understanding."@en ;
	rdfs:label "Life cycle model"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#Glossary_Ontology%20Network%20Development%20Process> rdf:type obtenv:Glossary ;
	dcterms:description "The ontology network development process is defined in NeOn as the process by which user needs are translated into an ontology network. The main goal of the ontology network development process is to identify and define which activities are carried out when an ontology network is developed."@en ;
	rdfs:label "Ontology Network Development Process"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#Glossary_Ontology%20Network%20Life%20Cycle> rdf:type obtenv:Glossary ;
	dcterms:description "The ontology network life cycle is defined as the project-specific sequence of activities created by mapping the activities identified in the ontology network development process onto a selected ontology network life cycle model."@en ;
	rdfs:label "Ontology Network Life Cycle"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#Glossary_Ontology%20Network%20Life%20Cycle%20Model> rdf:type obtenv:Glossary ;
	dcterms:description "An ontology network life cycle model is defined as the framework, selected by each organization, on which to map the activities identified in the ontology network development process to produce the ontology network life cycle."@en ;
	rdfs:label "Ontology Network Life Cycle Model"@en .

obt:Glossary_Procedure rdf:type obtenv:Glossary ;
	dcterms:description "an established method of accomplishing a consistent performance or result. A procedure typically can be described as the sequence of steps that will be used to execute a process."@en ;
	rdfs:label "Procedure"@en .

obt:Glossary_Process rdf:type obtenv:Glossary ;
	dcterms:description "Set of interrelated or interacting activities which transforms inputs into outputs"@en ;
	rdfs:label "Process"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#Glossary_Process%20outcome> rdf:type obtenv:Glossary ;
	dcterms:description "Observable result of the successful achievement of the process purpose"@en ;
	rdfs:label "Process outcome"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#Glossary_Process%20purpose> rdf:type obtenv:Glossary ;
	dcterms:description "High level objective of performing the process and the likely outcomes of effective implementation of the process"@en ;
	rdfs:label "Process purpose"@en .

obt:Glossary_Product rdf:type obtenv:Glossary ;
	dcterms:description "Result of a process"@en ;
	rdfs:label "Product"@en .

obt:Glossary_System rdf:type obtenv:Glossary ;
	dcterms:description "Combination of interacting elements organized to achieve one or more stated purposes"@en ;
	rdfs:label "System"@en .

obt:Glossary_Task rdf:type obtenv:Glossary ;
	dcterms:description "Requirement, recommendation, or permissible action, intended to contribute to the achievement of one or more outcomes of a process."@en ;
	rdfs:label "Task"@en .

obt:Glossary_View rdf:type obtenv:Glossary ;
	dcterms:description "Representation of a whole system from the perspective of a related set of concerns."@en ;
	rdfs:label "View"@en .

obt:Glossary_Viewpoint rdf:type obtenv:Glossary ;
	dcterms:description "Specification of the conventions for constructing and using a view."@en ;
	rdfs:label "Viewpoint"@en .

obt:InformationItemsExpression_INF_NeON_22 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF22 ;
	rdfs:label "Non-ontological resource quality criteria"@en .

obt:InformationItemsExpression_INF_NeOn_1 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF1 ;
	rdfs:label "Ontology purpose"@en .

obt:InformationItemsExpression_INF_NeOn_10 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF10 ;
	rdfs:label "Ontology CQs priorities"@en .

obt:InformationItemsExpression_INF_NeOn_11 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF11 ;
	rdfs:label "Ontology CQs validity criteria"@en .

obt:InformationItemsExpression_INF_NeOn_12 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF12 ;
	rdfs:label "Ontology Pre-glossary"@en .

obt:InformationItemsExpression_INF_NeOn_13 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF13 ;
	rdfs:label "Ontological needs"@en .

obt:InformationItemsExpression_INF_NeOn_14 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF14 ;
	rdfs:label "Ontology Requirements Specifications Document (ORSD) NeOn"@en .

obt:InformationItemsExpression_INF_NeOn_15 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF15 ;
	rdfs:label "Set of relevant non-ontological resources"@en .

obt:InformationItemsExpression_INF_NeOn_16 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF16 ;
	rdfs:label "Non-ontological resource reuse candidates"@en .

obt:InformationItemsExpression_INF_NeOn_17 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF17 ;
	rdfs:label "Non-ontological resource lexical entries"@en .

obt:InformationItemsExpression_INF_NeOn_18 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF18 ;
	rdfs:label "Non-ontological resource precision"@en .

obt:InformationItemsExpression_INF_NeOn_19 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF19 ;
	rdfs:label "Non-ontological resource coverage"@en .

obt:InformationItemsExpression_INF_NeOn_2 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF2 ;
	rdfs:label "Ontology scope"@en .

obt:InformationItemsExpression_INF_NeOn_20 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF20 ;
	rdfs:label "Non-ontological resource consensus"@en .

obt:InformationItemsExpression_INF_NeOn_21 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF21 ;
	rdfs:label "Non-ontological resource assessment table"@en .

obt:InformationItemsExpression_INF_NeOn_23 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF23 ;
	rdfs:label "Ontology (implemented)"@en .

obt:InformationItemsExpression_INF_NeOn_24 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF24 ;
	rdfs:label "Non-ontological resource documentation"@en .

obt:InformationItemsExpression_INF_NeOn_25 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF25 ;
	rdfs:label "Non-ontological resource schema"@en .

obt:InformationItemsExpression_INF_NeOn_26 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF26 ;
	rdfs:label "Non-ontological resource data model"@en .

obt:InformationItemsExpression_INF_NeOn_27 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF27 ;
	rdfs:label "Non-ontological reengineering pattern"@en .

obt:InformationItemsExpression_INF_NeOn_28 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF28 ;
	rdfs:label "Conceptual model"@en .

obt:InformationItemsExpression_INF_NeOn_29 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF29 ;
	rdfs:label "Ontology Requirements addressed by Ontology Design Patterns (candidates)"@en .

obt:InformationItemsExpression_INF_NeOn_3 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF3 ;
	rdfs:label "Ontology level of formality"@en .

obt:InformationItemsExpression_INF_NeOn_30 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF30 ;
	rdfs:label "Identified Ontology Design Pattern Types"@en .

obt:InformationItemsExpression_INF_NeOn_4 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF4 ;
	rdfs:label "Ontology list with intended users"@en .

obt:InformationItemsExpression_INF_NeOn_5 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF5 ;
	rdfs:label "Ontology use-cases"@en .

obt:InformationItemsExpression_INF_NeOn_6 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF6 ;
	rdfs:label "Ontology CQs (natural language) NeOn"@en .

obt:InformationItemsExpression_INF_NeOn_7 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF7 ;
	rdfs:label "Ontology CQs answers (natural language)"@en .

obt:InformationItemsExpression_INF_NeOn_8 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF8 ;
	rdfs:label "Ontology Groups of CQs"@en .

obt:InformationItemsExpression_INF_NeOn_9 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF9 ;
	rdfs:label "Ontology CQs validity confirmation"@en .

obt:InformationItemsExpression_INF_SAMOD_1 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF35 ;
	rdfs:label "Motivating scenarios (MS) SAMOD"@en .

obt:InformationItemsExpression_INF_SAMOD_10 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF63 ;
	rdfs:label "ABox_n SAMOD"@en .

obt:InformationItemsExpression_INF_SAMOD_11 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF64 ;
	rdfs:label "Modelet_n SAMOD"@en .

obt:InformationItemsExpression_INF_SAMOD_2 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF6 ;
	rdfs:label "Informal competency questions (CQ) SAMOD"@en .

obt:InformationItemsExpression_INF_SAMOD_3 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf <https://w3id.org/ontoboldt/ns/ontoboldt#InformationItem_INF12%2C%20INF38> ;
	rdfs:label "Glossary of Terms (GoT) SAMOD"@en .

obt:InformationItemsExpression_INF_SAMOD_4 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF7 ;
	rdfs:label "Formal competency questions (SQ) SAMOD"@en .

obt:InformationItemsExpression_INF_SAMOD_5 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF58 ;
	rdfs:label "Modelet SAMOD"@en .

obt:InformationItemsExpression_INF_SAMOD_6 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF59 ;
	rdfs:label "Bag of test-cases (BoT) SAMOD"@en .

obt:InformationItemsExpression_INF_SAMOD_7 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF60 ;
	rdfs:label "TBox SAMOD"@en .

obt:InformationItemsExpression_INF_SAMOD_8 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF61 ;
	rdfs:label "ABox SAMOD"@en .

obt:InformationItemsExpression_INF_SAMOD_9 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF62 ;
	rdfs:label "TBox_n SAMOD"@en .

obt:InformationItemsExpression_INF_UPON_1 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF31 ;
	rdfs:label "Domain Experts interview outcome"@en .

obt:InformationItemsExpression_INF_UPON_10 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF35 ;
	rdfs:label "Storyboard"@en .

obt:InformationItemsExpression_INF_UPON_11 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF10 ;
	rdfs:label "Ontology Use-cases Priorities UPON"@en .

obt:InformationItemsExpression_INF_UPON_12 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF36 ;
	rdfs:label "Domain Lexicon"@en .

obt:InformationItemsExpression_INF_UPON_13 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF37 ;
	rdfs:label "Reference Lexicon"@en .

obt:InformationItemsExpression_INF_UPON_14 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF38 ;
	rdfs:label "Reference Glossary"@en .

obt:InformationItemsExpression_INF_UPON_15 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF53 ;
	rdfs:label "Ontological Resource reuse candidates"@en .

obt:InformationItemsExpression_INF_UPON_16 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF16 ;
	rdfs:label "Non-ontological resource reuse candidates"@en .

obt:InformationItemsExpression_INF_UPON_17 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF54 ;
	rdfs:label "UML class diagrams"@en .

obt:InformationItemsExpression_INF_UPON_18 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF55 ;
	rdfs:label "UML activity diagrams"@en .

obt:InformationItemsExpression_INF_UPON_19 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF56 ;
	rdfs:label "Semantic Network"@en .

obt:InformationItemsExpression_INF_UPON_2 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF32 ;
	rdfs:label "Application specific documents"@en .

obt:InformationItemsExpression_INF_UPON_20 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF23 ;
	rdfs:label "Ontology (implemented) UPON"@en .

obt:InformationItemsExpression_INF_UPON_21 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF57 ;
	rdfs:label "Ontology (tested)"@en .

obt:InformationItemsExpression_INF_UPON_3 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF33 ;
	rdfs:label "Application Lexicon"@en .

obt:InformationItemsExpression_INF_UPON_4 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF6 ;
	rdfs:label "Ontology CQs (natural language) UPON"@en .

obt:InformationItemsExpression_INF_UPON_5 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF5 ;
	rdfs:label "Ontology use-cases UPON"@en .

obt:InformationItemsExpression_INF_UPON_6 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF34 ;
	rdfs:label "Ontology Domain UPON"@en .

obt:InformationItemsExpression_INF_UPON_7 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF2 ;
	rdfs:label "Ontology Scope UPON"@en .

obt:InformationItemsExpression_INF_UPON_8 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF1 ;
	rdfs:label "Ontology Purpose UPON"@en .

obt:InformationItemsExpression_INF_UPON_9 rdf:type obtenv:InformationItemExpression ;
	frbr:realizationOf obt:InformationItem_INF4 ;
	rdfs:label "Ontology Intended users UPON"@en .

obt:InformationItems_INF1 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontology purpose"@en .

obt:InformationItems_INF10 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontology CQs priorities"@en .

obt:InformationItems_INF11 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontology CQs validity criteria"@en .

obt:InformationItems_INF12 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontology Pre-glossary"@en .

obt:InformationItems_INF13 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontological needs"@en .

obt:InformationItems_INF14 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontology Requirements Specifications Document (ORSD)"@en .

obt:InformationItems_INF15 rdf:type obtenv:InformationItem ;
	rdfs:label "Set of relevant non-ontological resources"@en .

obt:InformationItems_INF16 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource reuse candidates"@en .

obt:InformationItems_INF17 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource lexical entries"@en .

obt:InformationItems_INF18 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource precision"@en .

obt:InformationItems_INF19 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource coverage"@en .

obt:InformationItems_INF2 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontology scope"@en .

obt:InformationItems_INF20 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource consensus"@en .

obt:InformationItems_INF21 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource assessment table"@en .

obt:InformationItems_INF22 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource quality criteria"@en .

obt:InformationItems_INF23 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontology (implemented)"@en .

obt:InformationItems_INF24 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource documentation"@en .

obt:InformationItems_INF25 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource schema"@en .

obt:InformationItems_INF26 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource data model"@en .

obt:InformationItems_INF27 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological reengineering pattern"@en .

obt:InformationItems_INF28 rdf:type obtenv:InformationItem ;
	rdfs:label "Conceptual model"@en .

obt:InformationItems_INF29 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontology Requirements addressed by Ontology Design Patterns (candidates)"@en .

obt:InformationItems_INF3 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontology level of formality"@en .

obt:InformationItems_INF30 rdf:type obtenv:InformationItem ;
	rdfs:label "Identified Ontology Design Pattern Types"@en .

obt:InformationItems_INF31 rdf:type obtenv:InformationItem ;
	rdfs:label "Domain Experts interview outcome"@en .

obt:InformationItems_INF32 rdf:type obtenv:InformationItem ;
	rdfs:label "Application specific documents"@en .

obt:InformationItems_INF33 rdf:type obtenv:InformationItem ;
	rdfs:label "Application Lexicon"@en .

obt:InformationItems_INF34 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontology Domain"@en .

obt:InformationItems_INF35 rdf:type obtenv:InformationItem ;
	rdfs:label "Storyboard"@en .

obt:InformationItems_INF36 rdf:type obtenv:InformationItem ;
	rdfs:label "Domain Lexicon"@en .

obt:InformationItems_INF37 rdf:type obtenv:InformationItem ;
	rdfs:label "Reference Lexicon"@en .

obt:InformationItems_INF38 rdf:type obtenv:InformationItem ;
	rdfs:label "Reference Glossary"@en .

obt:InformationItems_INF39 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource type glossary"@en .

obt:InformationItems_INF4 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontology list with intended users"@en .

obt:InformationItems_INF40 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource type dictionary"@en .

obt:InformationItems_INF41 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource type lexicon"@en .

obt:InformationItems_INF42 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource type classification scheme"@en .

obt:InformationItems_INF43 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource type thesauri"@en .

obt:InformationItems_INF44 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource type folksonomy"@en .

obt:InformationItems_INF45 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource data model path enumeration"@en .

obt:InformationItems_INF46 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource data model adjacency list"@en .

obt:InformationItems_INF47 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource data model snowflake"@en .

obt:InformationItems_INF48 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource data model flattened"@en .

obt:InformationItems_INF49 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource implementation database"@en .

obt:InformationItems_INF5 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontology use-cases"@en .

obt:InformationItems_INF50 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource implementation XML"@en .

obt:InformationItems_INF51 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource implementation flat file"@en .

obt:InformationItems_INF52 rdf:type obtenv:InformationItem ;
	rdfs:label "Non-ontological resource implementation spreadsheet"@en .

obt:InformationItems_INF53 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontological Resource reuse candidates"@en .

obt:InformationItems_INF54 rdf:type obtenv:InformationItem ;
	rdfs:label "UML class diagrams"@en .

obt:InformationItems_INF55 rdf:type obtenv:InformationItem ;
	rdfs:label "UML activity diagrams"@en .

obt:InformationItems_INF56 rdf:type obtenv:InformationItem ;
	rdfs:label "Semantic Network"@en .

obt:InformationItems_INF57 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontology (tested)"@en .

obt:InformationItems_INF58 rdf:type obtenv:InformationItem ;
	rdfs:label "Modelet"@en .

obt:InformationItems_INF59 rdf:type obtenv:InformationItem ;
	rdfs:label "Bag of test-cases (BoT)"@en .

obt:InformationItems_INF6 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontology CQs (natural language)"@en .

obt:InformationItems_INF60 rdf:type obtenv:InformationItem ;
	rdfs:label "TBox"@en .

obt:InformationItems_INF61 rdf:type obtenv:InformationItem ;
	rdfs:label "ABox"@en .

obt:InformationItems_INF62 rdf:type obtenv:InformationItem ;
	rdfs:label "TBox_n"@en .

obt:InformationItems_INF63 rdf:type obtenv:InformationItem ;
	rdfs:label "ABox_n"@en .

obt:InformationItems_INF64 rdf:type obtenv:InformationItem ;
	rdfs:label "Modelet_n"@en .

obt:InformationItems_INF7 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontology CQs answers (natural language)"@en .

obt:InformationItems_INF8 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontology Groups of CQs"@en .

obt:InformationItems_INF9 rdf:type obtenv:InformationItem ;
	rdfs:label "Ontology CQs validity confirmation"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#LifeCycleActivityGroups_Agreement%20Processes> rdf:type obtenv:LifeCycleActivityGroup ;
	dcterms:description "define the activities necessary to establish an agreement between two organizations. These processes are the acquisition process and the supply process"@en ;
	rdfs:label "Agreement Processes"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#LifeCycleActivityGroups_Development%20Activity%20Group> rdf:type obtenv:LifeCycleActivityGroup ;
	dcterms:description "This group includes the activities performed during the development and enhancement of a software project. For example, Design activity has as main goal to develop a coherent, well-organized representation of the software system that meets the software requirements. This group is divided into three subgroups: Software Requirements, Design, and Implementation."@en ;
	rdfs:label "Development Activity Group"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#LifeCycleActivityGroups_Post-Development%20Activity%20Group> rdf:type obtenv:LifeCycleActivityGroup ;
	dcterms:description "This group includes the activities that install, operate, support, maintain, and retire a software product. For example, the Installation activity consists of the transportation and installation of a software system from the development environment to the target environment(s); and the Operation and Support activities involve user operation of the system and ongoing support. Support includes providing technical assistance, consulting with the user, and recording user support requests by maintaining a Support Request Log. This group is divided into four subgroups: Installation, Operation and Support, Maintenance, and Retirement"@en ;
	rdfs:label "Post-Development Activity Group"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#LifeCycleActivityGroups_Pre-Development%20Activity%20Group> rdf:type obtenv:LifeCycleActivityGroup ;
	dcterms:description "This group includes the activities that explore and allocate system requirements before the software development can begin. For example, the feasibility study is used to analyse the idea or need, the potential approaches, and all life cycle constraints and benefits. Justification for each recommendation shall be fully documented and formally approved by all concerned organizations (including the user and the developer). This group is divided into three activity subgroups: Concept Exploration, System Allocation, and Software Importation. "@en ;
	rdfs:label "Pre-Development Activity Group"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#LifeCycleActivityGroups_Project%20Management%20Activity%20Group> rdf:type obtenv:LifeCycleActivityGroup ;
	dcterms:description "This group includes activities that initiate, monitor, and control a software project throughout its life cycle. For example, Project Monitoring and Control activities are used to track and manage the project. During these activities, actual project performance is tracked, reported, and managed against the planned performance. Special consideration is given to the management of risk. This group is divided into three subgroups: Project Initiation, Project Planning, and Project Monitoring and Control."@en ;
	rdfs:label "Project Management Activity Group"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#LifeCycleActivityGroups_Project%20Processes> rdf:type obtenv:LifeCycleActivityGroup ;
	dcterms:description "There are two categories of Project Processes: project management processes and project support processes. The Project Management Processes are used to plan, execute assess and control the progress of a project. The Project Support Processes support specialized management objectives. "@en ;
	rdfs:label "Project Processes"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#LifeCycleActivityGroups_Project-enabling%20Processes> rdf:type obtenv:LifeCycleActivityGroup ;
	dcterms:description "manage the organization�s capability to acquire and supply products or services through the initiation, support and control of projects."@en ;
	rdfs:label "Project-enabling Processes"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#LifeCycleActivityGroups_Software%20Implementation%20Processes> rdf:type obtenv:LifeCycleActivityGroup ;
	dcterms:description "which include seven processes, are used to produce a specified system element (software item) implemented in software. Those processes transform specified behaviour, interfaces and implementation constraints into implementation actions resulting in a system element that satisfies the requirements derived from the system requirements."@en ;
	rdfs:label "Software Implementation Processes"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#LifeCycleActivityGroups_Software%20Reuse%20Processes> rdf:type obtenv:LifeCycleActivityGroup ;
	dcterms:description "which includes three processes (domain engineering process, reuse program management process, and reuse asset management process), support an organization�s ability to reuse software items across project boundaries."@en ;
	rdfs:label "Software Reuse Processes"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#LifeCycleActivityGroups_Software%20Support%20Processes> rdf:type obtenv:LifeCycleActivityGroup ;
	dcterms:description "which includes eight processes, provide a specific focused set of activities for performing a specialized software process. A supporting process assists the Software Implementation Process as an integral part with a distinct purpose, contributing to the success and quality of the software project."@en ;
	rdfs:label "Software Support Processes"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#LifeCycleActivityGroups_Support%20Activity%20Group> rdf:type obtenv:LifeCycleActivityGroup ;
	dcterms:description "This group includes activities that are necessary to assure the successful completion of a project, but that are considered as supporting activities rather than as activities directly oriented to the development effort. In other words, the Support Activity Group includes the set of activities necessary to ensure that a system fulfils its original requirements and any subsequent modifications to those requirements. For example, the Documentation Development activity for software development and usage has as purpose to plan, design, implement, edit, produce, distribute, and maintain the documents that are needed by developers and users. This group is divided into four subgroups: Evaluation, Software Configuration Management, Documentation Development, and Training."@en ;
	rdfs:label "Support Activity Group"@en .

<https://w3id.org/ontoboldt/ns/ontoboldt#LifeCycleActivityGroups_Technical%20Processes> rdf:type obtenv:LifeCycleActivityGroup ;
	dcterms:description "which include eleven processes, are used to define the requirements for a system, to transform the requirements into an effective product, to permit consistent reproduction of the product where necessary, to use the product, to provide the required services, to sustain the provision of those services and to dispose of the product when it is retired from service."@en ;
	rdfs:label "Technical Processes"@en .

obt:Procedures_P1 rdf:type obtenv:Procedure ;
	dcterms:description "refers to taking available non-ontological resources2 (e.g., databases, controlled vocabularies, etc.) for the development of ontologies. Non-Ontological Resource Reuse is defined in [80] as the process of choosing the most suitable non-ontological resources for the development of ontologies."@en ;
	rdfs:label "Non Ontologial Resource Reuse"@en .

obt:Procedures_P10 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of enriching the ontology with additional information, e.g. metadata or comments."@en ;
	rdfs:label "Ontology Annotation"@en .

obt:Procedures_P100 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to reuse the selected patterns and compose them."@en ;
	rdfs:label "Ontology Design Patterns Selection Reuse"@en .

obt:Procedures_P101 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to test the solution with respect to the selected partial problem at hand and to ensure that it really solves this problem in a correct way"@en ;
	rdfs:label "Ontology Design Patterns Selection Evaluation"@en .

obt:Procedures_P102 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to integrate the solutions to the partial problems solved by the previous iterations, or by the parallel teams working on different sub-problems."@en ;
	rdfs:label "Ontology Design Patterns Integration"@en .

obt:Procedures_P103 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Identify purpose"@en .

obt:Procedures_P104 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Identify intended ontology users"@en .

obt:Procedures_P105 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Identify intended uses"@en .

obt:Procedures_P106 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Identify requirements"@en .

obt:Procedures_P107 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Group requirements"@en .

obt:Procedures_P108 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Validate the set of requirements"@en .

obt:Procedures_P109 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Prioritize requirements"@en .

obt:Procedures_P11 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of checking an ontology against user requirements, such as usability, usefulness, abstraction, quality, etc."@en ;
	rdfs:label "Ontology Assessment"@en .

obt:Procedures_P110 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Extract terminology and its frequency"@en .

obt:Procedures_P111 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Identify ontology scope"@en .

obt:Procedures_P112 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Identify ontology level of formality"@en .

obt:Procedures_P113 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Identify ontology domain"@en .

obt:Procedures_P114 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Writing storyboards"@en .

obt:Procedures_P115 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Create Application Lexicon"@en .

obt:Procedures_P116 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Building Reference Lexicon"@en .

obt:Procedures_P117 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Developing a modelet"@en .

obt:Procedures_P118 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Model test modelet_n formal and rhetorical"@en .

obt:Procedures_P119 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Create ABox example"@en .

obt:Procedures_P12 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of finding differences between two or more ontologies or between two or more ontology modules."@en ;
	rdfs:label "Ontology Comparison"@en .

obt:Procedures_P120 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Data test modelet_n formal and rhetorical"@en .

obt:Procedures_P121 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Write formal queries"@en .

obt:Procedures_P122 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Query test modelet_n formal and rhetorical"@en .

obt:Procedures_P123 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Define a new TBox model"@en .

obt:Procedures_P124 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Update Bag of Test-cases (BoT)"@en .

obt:Procedures_P125 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Model test BoT formal"@en .

obt:Procedures_P126 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Data test BoT formal"@en .

obt:Procedures_P127 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Query test BoT formal"@en .

obt:Procedures_P128 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Set TBox_n as new TBox"@en .

obt:Procedures_P129 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Define a new Test-case"@en .

obt:Procedures_P13 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of organizing and structuring the information (data, knowledge, etc.), obtained during the acquisition process, into meaningful models at the knowledge level according to the ontology specification document. This activity is independent of the way in which the ontology implementation will be carried out."@en ;
	rdfs:label "Ontology Conceptualization"@en .

obt:Procedures_P130 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Merge the current model with the modelet"@en .

obt:Procedures_P131 rdf:type obtenv:Procedure ;
	dcterms:description ""@en ;
	rdfs:label "Refactor the current model"@en .

obt:Procedures_P14 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of recording all the versions of the documentation, software and ontology code, and of controling the changes"@en ;
	rdfs:label "Ontology Configuration Management"@en .

obt:Procedures_P15 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of guaranteeing that scheduled activities in the ontology development process are completed in the manner intended to be performed."@en ;
	rdfs:label "Control"@en .

obt:Procedures_P16 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of adapting an ontology to a specific user's needs."@en ;
	rdfs:label "Ontology Customization"@en .

obt:Procedures_P17 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of identifying parts of the ontology directly responsible for incorrectness and incompleteness. Ontology diagnosis is triggered by ontology validation."@en ;
	rdfs:label "Ontology Diagnosis"@en .

obt:Procedures_P18 rdf:type obtenv:Procedure ;
	dcterms:description "the collection of documents and explanatory comments generated during the entire ontology building process. Note: Examples of documents external to the implemented ontology include ontology specification documents, sources used for acquiring knowledge, ontology conceptualization document, design and decision criteria, ontological commitments, etc."@en ;
	rdfs:label "Ontology Documentation"@en .

obt:Procedures_P19 rdf:type obtenv:Procedure ;
	dcterms:description "a knowledge acquisition activity in which conceptual structures (e.g. T-Box) and their instances (e.g. A-Box) are acquired from domain experts."@en ;
	rdfs:label "Ontology Elicitation"@en .

obt:Procedures_P2 rdf:type obtenv:Procedure ;
	dcterms:description "the process of retrieving and transforming an existing non ontological resource (data bases, controlled vocabularies, etc.) into an ontology."@en ;
	rdfs:label "Non Ontological Resource Reengineering"@en .

obt:Procedures_P20 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of extending an ontology with new conceptual structures (e.g., concepts, roles, axioms, etc.)."@en ;
	rdfs:label "Ontology Enrichment"@en .

obt:Procedures_P21 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of analyzing the environment in which the ontology is going to be developed."@en ;
	rdfs:label "Ontology Environment Study"@en .

obt:Procedures_P22 rdf:type obtenv:Procedure ;
	dcterms:description "Ontology evaluation refers to the activity of checking the technical quality of an ontology against a frame of reference."@en ;
	rdfs:label "Ontology Evaluation"@en .

obt:Procedures_P23 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of facilitating the modification of an ontology by preserving its consistency."@en ;
	rdfs:label "Ontology Evolution"@en .

obt:Procedures_P24 rdf:type obtenv:Procedure ;
	dcterms:description "an ontology enrichment activity for stretching the ontology in width."@en ;
	rdfs:label "Ontology Extension"@en .

obt:Procedures_P25 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of answering questions like: is it possible to build the ontology? is it suitable to build the ontology?, etc."@en ;
	rdfs:label "Ontology Feasibility Study"@en .

obt:Procedures_P26 rdf:type obtenv:Procedure ;
	dcterms:description "the transformation of a conceptual model into a formal or semi-computable model according to a knowledge representation paradigm (e.g., description logics, frames, rules, etc.)."@en ;
	rdfs:label "Ontology Formalization"@en .

obt:Procedures_P27 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of outputting a new implementation of the ontology on the basis of the new conceptual model."@en ;
	rdfs:label "Ontology Forward Engineering"@en .

obt:Procedures_P28 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of generating computable models according to the syntax of a formal representation language (e.g. RDF(s), OWL, FLogic, etc.)."@en ;
	rdfs:label "Ontology Implementation"@en .

obt:Procedures_P29 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of including one ontology in another ontology."@en ;
	rdfs:label "Ontology Integration"@en .

obt:Procedures_P3 rdf:type obtenv:Procedure ;
	dcterms:description "is defined as the process of using available ontological resources (ontologies, modules, statements, or ontology design patterns) in the solution of different problems (e.g., the development of different ontology-based applications, the activity of ontology aligning (as background knowledge), etc.). We distinguish between: ontology reuse, ontology module reuse, ontology statement reuse, and ontology design pattern reuse"@en ;
	rdfs:label "Ontological Resource Reuse"@en .

obt:Procedures_P30 rdf:type obtenv:Procedure ;
	dcterms:description "activities for capturing knowledge (e.g., T-Box and A-Box) from a variety of sources (e.g., documents, experts, data bases, etc.). We can distinguish between: Ontology Elicitation, Ontology Learning and Ontology Population."@en ;
	rdfs:label "Knowledge Acquisition for Ontologies"@en .

obt:Procedures_P31 rdf:type obtenv:Procedure ;
	dcterms:description "Ontology Learning is a knowledge acquisition activity that relies on (semi-) automatic methods to transform unstructured (e.g. corpora), semi-structured (e.g. folksonomies, html pages, etc.) and structured data sources (e.g. data bases) into conceptual structures (e.g. T-Box)."@en ;
	rdfs:label "Ontology Learning"@en .

obt:Procedures_P32 rdf:type obtenv:Procedure ;
	dcterms:description "the adaption of an ontology to a particular language and culsture."@en ;
	rdfs:label "Ontology Localization"@en .

obt:Procedures_P33 rdf:type obtenv:Procedure ;
	dcterms:description " the activity of finding or discovering relationships or correspondences beetween entities of different ontologies or ontology modules. Note: Ontology matching can be seen as the first stage of Ontology Aligning."@en ;
	rdfs:label "Ontology Matching"@en .

obt:Procedures_P34 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of creating a new ontology or ontology module from two or more, possibly overlapping, source ontologies or ontology modules."@en ;
	rdfs:label "Ontology Merging"@en .

obt:Procedures_P35 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of changing the ontology, without considering the consistency."@en ;
	rdfs:label "Ontology Modification"@en .

obt:Procedures_P36 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of identifying one or more modules in an ontology with the purpose of supporting reuse or maintenance. Note: We can make distinctions between: Ontology Module Extraction and Ontology Partitioning."@en ;
	rdfs:label "Ontology Modularization"@en .

obt:Procedures_P37 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of obtaining from an ontology concrete modules to be used for a particular pupose (e.g. to contain a particular sub-vocabulary of the original ontology)."@en ;
	rdfs:label "Ontology Module Extraction"@en .

obt:Procedures_P38 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of dividing an ontology into a set of (not necessary disjoint) modules that together form an ontology and that can be treated separately."@en ;
	rdfs:label "Ontology Partitioning"@en .

obt:Procedures_P39 rdf:type obtenv:Procedure ;
	dcterms:description "a knowledge acquisition activity that relies on (semi-) automatic methods to transform unstructured (e.g. corpora), semi-structured (e.g. folksonomies, html pages, etc.) and structured data sources (e.g. data bases) into instance data (e.g. A-Box)."@en ;
	rdfs:label "Ontology Population"@en .

obt:Procedures_P4 rdf:type obtenv:Procedure ;
	dcterms:description "the process of using ontologies in the solution of different problems"@en ;
	rdfs:label "Ontology Reuse"@en .

obt:Procedures_P40 rdf:type obtenv:Procedure ;
	dcterms:description " the activity of discarding conceptual structures (e.g., part of T-Box) of a given ontology that are not or no longer relevant. Note: Pruning is mostly used in combination with ontology learning methods to discard potentially irrelevant learned concepts/relations."@en ;
	rdfs:label "Ontology Pruning"@en .

obt:Procedures_P41 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of assuring that the quality of each and every process carried out and product built (ontology, software and documentation) is satisfactory."@en ;
	rdfs:label "Ontology Quality Assurance"@en .

obt:Procedures_P42 rdf:type obtenv:Procedure ;
	dcterms:description "the process of retrieving and transforming a conceptual model of an existing and implemented ontology into a new, more correct and more complete conceptual model which is reimlemented."@en ;
	rdfs:label "Ontology Reengineering"@en .

obt:Procedures_P43 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of correcting and reorganizing the knowledge contained in an initial conceptual model, and detecting missing knowledge. Note: This process contains two phases: analysis and synthesis. The ''analysis phase goal'' is to evaluate the ontology technically, that is, to check that the hierarchy of the ontology and its classes, instances, relations and functions are complete (contain all the definitions required for the domain of chemical substances), consistent (there are no contradictions in the ontology and with respect to the knowledge sources used), concise (there are no explicit and implicit redundancies) and syntactically correct. The ''synthesis phase'' seeks to correct the ontology after the analysis phase and document any changes made."@en ;
	rdfs:label "Ontology Restructuring"@en .

obt:Procedures_P44 rdf:type obtenv:Procedure ;
	dcterms:description " the activity of resolving errors (incompleteness, incorrecteness) in the ontology and it is triggered by ontology diagnosis."@en ;
	rdfs:label "Ontology Repair"@en .

obt:Procedures_P45 rdf:type obtenv:Procedure ;
	dcterms:description "The activity of outputting a possible conceptual model on the basis of the code in which the ontology is implemented."@en ;
	rdfs:label "Ontology Reverse Engineering"@en .

obt:Procedures_P46 rdf:type obtenv:Procedure ;
	dcterms:description "The activity of identifying the tasks to be performed during the ontology development, their arrangement, and the time and resources needed for their completion."@en ;
	rdfs:label "Scheduling"@en .

obt:Procedures_P47 rdf:type obtenv:Procedure ;
	dcterms:description "The activity of finding candidate ontologies or ontology modules to be reused"@en ;
	rdfs:label "Ontology Search"@en .

obt:Procedures_P48 rdf:type obtenv:Procedure ;
	dcterms:description "The activity of choosing the most suitable ontologies or among those available in an ontology repository or library, for a concrete domain of interest and associated tasks."@en ;
	rdfs:label "Ontology Selection"@en .

obt:Procedures_P49 rdf:type obtenv:Procedure ;
	dcterms:description "an ontology enrichment activity for extending the ontology in depth."@en ;
	rdfs:label "Ontology Specialization"@en .

obt:Procedures_P5 rdf:type obtenv:Procedure ;
	dcterms:description "the process of using ontology modules in the solution of different problems"@en ;
	rdfs:label "Ontology Module Reuse"@en .

obt:Procedures_P50 rdf:type obtenv:Procedure ;
	dcterms:description "The activity of collecting the requirements that the ontology should fulfill, e.g. reasons to build the ontology, target group, intended uses, possibly reached through a consensus process."@en ;
	rdfs:label "Ontology Specification"@en .

obt:Procedures_P51 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of providing an abstract or summary of the ontology content. Note: The summary can include, for example, a couple of top levels in the ontology class hierarchy (perhaps a graphical representation of these top-level concepts and links between them)."@en ;
	rdfs:label "Ontology Summarization"@en .

obt:Procedures_P52 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of changing the representation formalism or language of an ontology from one to another. Note: Ontology Translation can be part of an ontology reengineering process."@en ;
	rdfs:label "Ontology Translation"@en .

obt:Procedures_P53 rdf:type obtenv:Procedure ;
	dcterms:description "minor changes carried out in an ontology that could not be considered an upgrade."@en ;
	rdfs:label "Ontology Update"@en .

obt:Procedures_P54 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of replacing an existing ontology with a new version."@en ;
	rdfs:label "Ontology Upgrade"@en .

obt:Procedures_P55 rdf:type obtenv:Procedure ;
	dcterms:description "the ontology evaluation that compares the meaning of the ontology definitions against the intended model of the world aiming to conceptualize. Note: It answers the question: Are you producing the right ontology?."@en ;
	rdfs:label "Ontology Validation"@en .

obt:Procedures_P56 rdf:type obtenv:Procedure ;
	dcterms:description "the ontology evaluation which compares the ontology against the ontology specification document (ontology requirements and competency questions), thus ensuring that the ontology is built correctly (in compliance with the ontology specification). Note: It answers the question: Are you producing the ontology right?."@en ;
	rdfs:label "Ontology Verification"@en .

obt:Procedures_P57 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of handling ontology changes by creating and managing different versions of the ontology [54]."@en ;
	rdfs:label "Ontology Versioning"@en .

obt:Procedures_P59 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of ontology module assessment is to find out which ontology modules, from the set of candidate ontology modules, are useful for the development of the ontology network."@en ;
	rdfs:label "Ontology Module Assessment"@en .

obt:Procedures_P6 rdf:type obtenv:Procedure ;
	dcterms:description "the process of using ontology statements in the solution of different problems"@en ;
	rdfs:label "Ontology Statement Reuse"@en .

obt:Procedures_P60 rdf:type obtenv:Procedure ;
	dcterms:description "The objective of this activity is to find out which ontology modules are the most suitable for the development of the ontology network."@en ;
	rdfs:label "Ontology Module Selection"@en .

obt:Procedures_P61 rdf:type obtenv:Procedure ;
	dcterms:description "The objective of this activity is to integrate the ontology modules selected in the ontology network being developed."@en ;
	rdfs:label "Ontology Module Integration"@en .

obt:Procedures_P62 rdf:type obtenv:Procedure ;
	dcterms:description "The objective of this activity is to search in libraries, repositories and registries for candidate domain ontologies that could satisfy the needs of the ontology network being developed."@en ;
	rdfs:label "Domain Ontology Search"@en .

obt:Procedures_P63 rdf:type obtenv:Procedure ;
	dcterms:description "The objective of this activity is to find out if the set of candidate domain ontologies are useful for the development of the ontology network."@en ;
	rdfs:label "Domain Ontology Assessment"@en .

obt:Procedures_P64 rdf:type obtenv:Procedure ;
	dcterms:description "The objective of this activity is to find out which domain ontologies are the most suitable for the development of the ontology network."@en ;
	rdfs:label "Domain Ontology Selection"@en .

obt:Procedures_P65 rdf:type obtenv:Procedure ;
	dcterms:description "The objective of this activity is to integrate the selected domain ontologies in the ontology network being developed."@en ;
	rdfs:label "Domain Ontology Integration"@en .

obt:Procedures_P66 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this activity is to search the internet for candidate ontology statements that could satisfy the ontological needs in a particular case"@en ;
	rdfs:label "Ontology Statement Search"@en .

obt:Procedures_P67 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this activity is to decide if a concrete ontology statement is useful or not for the ontology network being developed."@en ;
	rdfs:label "Ontology Statement Assessment"@en .

obt:Procedures_P68 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this activity is to decide between the useful ontology statements which ones are the best or most convenient for the ontology network being developed."@en, "the activity of using ontology design patterns in the solution of different modelling problems during the development of new ontologies"@en ;
	rdfs:label "Ontology Design Pattern Reuse"@en, "Ontology Statement Selection"@en .

obt:Procedures_P69 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this activity is to decide how the selected ontology statements will be integrated in the ontology network being developed"@en ;
	rdfs:label "Ontology Statement Integration"@en .

obt:Procedures_P7 rdf:type obtenv:Procedure ;
	dcterms:description "General or Common Ontology Reuse refers to the process of using general or common ontologies in the solution of different problems."@en ;
	rdfs:label "General or Common Ontology Reuse"@en .

obt:Procedures_P70 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this activity is to check for local inconsistencies in the ontology network."@en ;
	rdfs:label "Check local inconsistencies"@en .

obt:Procedures_P71 rdf:type obtenv:Procedure ;
	dcterms:description "The most important definitions and axioms (e.g. transitivity of part of in mereology), and those that distinguish the different variants of the support theory should be identified."@en ;
	rdfs:label "Common Ontology Selection"@en .

obt:Procedures_P72 rdf:type obtenv:Procedure ;
	dcterms:description "Customize the selected common ontology according to the needs of the host ontology."@en ;
	rdfs:label "Common Ontology Customization"@en .

obt:Procedures_P73 rdf:type obtenv:Procedure ;
	dcterms:description "The customized common ontology is included in the destination ontology, and the global result is evaluated again, whereas the host ontology is the ontology network which is being developed."@en ;
	rdfs:label "Common Ontology Integration"@en .

obt:Procedures_P74 rdf:type obtenv:Procedure ;
	dcterms:description "The ontology development team should study the theory (and its variants) that supports the type of common ontology to be reused"@en ;
	rdfs:label "Carry out the Background Study on the Support Theory"@en .

obt:Procedures_P75 rdf:type obtenv:Procedure ;
	dcterms:description "The most important definitions and axioms (e.g. transitivity of part of in mereology), and those that distinguish the different variants of the support theory should be identified"@en ;
	rdfs:label "Identify the most significant definitions and axioms of the support theory"@en .

obt:Procedures_P76 rdf:type obtenv:Procedure ;
	dcterms:description "The ontology development team should search for ontologies implemented in a computable language"@en ;
	rdfs:label "Search for common ontologies supported by the theory"@en .

obt:Procedures_P77 rdf:type obtenv:Procedure ;
	dcterms:description "It is assumed that each row represents the set of definitions (or axioms) identified in activity 2, and each column, the ontologies found in activity 3"@en ;
	rdfs:label "Build the comparative study"@en .

obt:Procedures_P78 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of the activity is to search non-ontological resources from highly reliable Web sites, domain-related sites and resources within organizations. "@en ;
	rdfs:label "Non-ontological resource search"@en .

obt:Procedures_P79 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this activity is to assess the set of candidate non-ontological resources"@en ;
	rdfs:label "Non-ontological resource assessment"@en .

obt:Procedures_P8 rdf:type obtenv:Procedure ;
	dcterms:description "Domain Ontology Reuse refers to the process of using domain ontologies in the solution of different problems."@en ;
	rdfs:label "Domain Ontology Reuse"@en .

obt:Procedures_P80 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to extract the lexical entries of the non ontological resources."@en ;
	rdfs:label "Lexical Entries Extraction"@en .

obt:Procedures_P81 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to calculate the precision of the non ontological resources."@en ;
	rdfs:label "Non-ontological Precision Calculation"@en .

obt:Procedures_P82 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to calculate the coverage of the non ontological resources"@en ;
	rdfs:label "Non-ontological Coverage Calculation"@en .

obt:Procedures_P83 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to evaluate the consensus of the non ontological resources."@en ;
	rdfs:label "Non-ontological Consensus Evaluation"@en .

obt:Procedures_P84 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to create an assessment table of the non ontological resources."@en ;
	rdfs:label "Non-ontological Assessment Table Creation"@en .

obt:Procedures_P85 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to extract quality-related criteria of the non ontological resources."@en ;
	rdfs:label "Non-ontological Quality Criteria Extraction"@en .

obt:Procedures_P86 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this activity is to select the most appropriate non ontological resources"@en ;
	rdfs:label "Non-ontological Resource Selection"@en .

obt:Procedures_P87 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this activity is to analyze a NOR to identify its underlying components and create representations of the resource at the different levels of abstraction (design, requirements and conceptual)"@en ;
	rdfs:label "Non-ontological Resource Reverse Reengineering"@en .

obt:Procedures_P88 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to search and compile all the available documentation about the non ontological resource including purpose, components; data model and implementation details."@en ;
	rdfs:label "Non-ontological Resource Documentation Gathering"@en .

obt:Procedures_P89 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to identify the non ontological resource schema including the conceptual components and their relationships."@en ;
	rdfs:label "Non-ontological Resource Schema Extraction"@en .

obt:Procedures_P9 rdf:type obtenv:Procedure ;
	dcterms:description "the activity of finding the correspondences between two or more ontologies and storing/exploiting them. A synonym for this activity is Ontology Mapping."@en ;
	rdfs:label "Ontology Mapping or Aligning"@en .

obt:Procedures_P90 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to find out how the non ontological resource schema and its content are represented in the data model."@en ;
	rdfs:label "Non-ontological Resource Data Model Extraction"@en .

obt:Procedures_P91 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this activity is to generate a conceptual model from the NOR"@en ;
	rdfs:label "Non-ontological Resource Transformation"@en .

obt:Procedures_P92 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to find out if there is any applicable pattern for reengineering non ontological resources useful to transform the non ontological resource into a conceptual model."@en ;
	rdfs:label "Non-ontological Resource Reengineering Pattern Search"@en .

obt:Procedures_P93 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to apply the reengineering pattern obtained in task 4 to transform the non ontological resource into a conceptual model"@en ;
	rdfs:label "Non-ontological Resource Reengineering Pattern Transformation"@en .

obt:Procedures_P94 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to establish an ad-hoc procedure to map the non ontological resource into a conceptual model, just in case a suitable pattern for reengineering was not found"@en ;
	rdfs:label "Non-ontological Resource Reengineering Ad-hoc Transformation"@en .

obt:Procedures_P95 rdf:type obtenv:Procedure ;
	dcterms:description "The objective of this task is to identify which requirement(s), from the ORSD, can be addressed by ontology design pattern reuse."@en ;
	rdfs:label "Ontology Design Patterns Requirements Identification"@en .

obt:Procedures_P96 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to identify as many patterns, or rather pattern catalogues, as possible that could help in solving the modelling issues proposed by the requirements selected in the previous task."@en ;
	rdfs:label "Ontology Design Patterns Identification"@en .

obt:Procedures_P97 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to prepare the set of modeling problems posed by the requirements for matching to the set of available patterns."@en ;
	rdfs:label "Ontology Design Patterns Requirements Problem Division"@en .

obt:Procedures_P98 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to identify which patterns are able to solve which parts of the selected subproblem, if any."@en ;
	rdfs:label "Ontology Design Patterns Problem Matching"@en .

obt:Procedures_P99 rdf:type obtenv:Procedure ;
	dcterms:description "The goal of this task is to select a set of patterns to reuse based on the results of the matching done in the previous task"@en ;
	rdfs:label "Ontology Design Patterns Selection"@en .

obt:Processes_Pr1 rdf:type obtenv:Process ;
	dcterms:description "refers to taking available non-ontological resources (Non-Ontological Resources (NORs), which were defined in [1], are knowledge-aware resources whose semantics have not been formalized yet by an ontology. ), e.g., databases, controlled vocabularies, etc., for the development of ontologies. Non-Ontological Resource Reuse is defined in [1] as the process of choosing the most suitable non-ontological resources for the development of ontologies. -- [1] D5.4.1. NeOn Methodology for Building Contextualized Ontology Networks"@en ;
	frbr:realizationOf obt:Procedure_P1 ;
	rdfs:label "Non Ontologial Resource Reuse"@en .

obt:Processes_Pr2 rdf:type obtenv:Process ;
	dcterms:description "the process of retrieving and transforming an existing non ontological resource (data bases, controlled vocabularies, etc.) into an ontology."@en ;
	frbr:realizationOf obt:Procedure_P2 ;
	rdfs:label "Non Ontological Resource Reengineering"@en .

obt:Processes_Pr3 rdf:type obtenv:Process ;
	dcterms:description "is defined as the process of using available ontological resources (ontologies, modules, statements, or ontology design patterns) in the solution of different problems (e.g., the development of different ontology-based applications, the activity of ontology aligning (as background knowledge), etc.). We distinguish between: ontology reuse, ontology module reuse, ontology statement reuse, and ontology design pattern reuse"@en ;
	frbr:realizationOf obt:Procedure_P3 ;
	rdfs:label "Ontological Resource Reuse"@en .

obt:Processes_Pr4 rdf:type obtenv:Process ;
	dcterms:description "the process of using ontologies in the solution of different problems"@en ;
	frbr:realizationOf obt:Procedure_P4 ;
	rdfs:label "Ontology Reuse"@en .

obt:Processes_Pr5 rdf:type obtenv:Process ;
	dcterms:description "the process of using ontology modules in the solution of different problems"@en ;
	frbr:realizationOf obt:Procedure_P5 ;
	rdfs:label "Ontology Module Reuse"@en .

obt:Processes_Pr6 rdf:type obtenv:Process ;
	dcterms:description "the process of using ontology statements in the solution of different problems"@en ;
	frbr:realizationOf obt:Procedure_P6 ;
	rdfs:label "Ontology Statement Reuse"@en .

obt:Processes_Pr7 rdf:type obtenv:Process ;
	dcterms:description "General or Common Ontology Reuse refers to the process of using general or common ontologies in the solution of different problems."@en ;
	frbr:realizationOf obt:Procedure_P7 ;
	rdfs:label "General or Common Ontology Reuse"@en .

obt:Processes_Pr8 rdf:type obtenv:Process ;
	dcterms:description "Domain Ontology Reuse refers to the process of using domain ontologies in the solution of different problems."@en ;
	frbr:realizationOf obt:Procedure_P8 ;
	rdfs:label "Domain Ontology Reuse"@en .

obt:Processes_Pr9 rdf:type obtenv:Process ;
	dcterms:description "the process of retrieving and transforming a conceptual model of an existing and implemented ontology into a new, more correct and more complete conceptual model which is reimlemented."@en ;
	frbr:realizationOf obt:Procedure_P42 ;
	rdfs:label "Ontology Reengineering Process NeOn"@en .

obt:Roles_R1 rdf:type obtenv:Role ;
	dcterms:description ""@en ;
	rdfs:label "Ontology Engineer"@en .

obt:Roles_R2 rdf:type obtenv:Role ;
	dcterms:description ""@en ;
	rdfs:label "Domain Expert"@en .

obt:Roles_R3 rdf:type obtenv:Role ;
	dcterms:description ""@en ;
	rdfs:label "Software Developer"@en .

obt:Tasks_TA_NeON_14 rdf:type obtenv:Task ;
	dcterms:description "Within this activity we propose in this deliverable to include the quality of the non-ontological resource. Quality attributes include:  ? Well documentation of the non-ontological resources.  ? Lack of anomalies of the non-ontological resource, such redundancies or inconsistencies.  ? Reliability of the non-ontological resource, it means analysing whether we can trust in the resource or not."@en ;
	frbr:realizationOf obt:Procedure_P85 ;
	rdfs:label "Non-ontological Quality Criteria Extraction"@en .

obt:Tasks_TA_NeOn_1 rdf:type obtenv:Task ;
	dcterms:description "The objective of this task is to obtain the main goal or aim of the ontology, its coverage and granularity. The degree of formality to be used to codify the ontology should be also identified. This degree of formality ranges from informal natural language to a rigorous formal language. Users, domain experts and the ontology development team carry out this task taking as input a set of ontological needs for obtaining the purpose, scope and level of formality of the ontology, using techniques as physical or virtual interviewers between them. The task output is the purpose, scope and level of formality of the ontology, which will be included in the corresponding slots of the OSRD template. "@en ;
	frbr:realizationOf <https://w3id.org/ontoboldt/ns/ontoboldt#Procedure_P103%2C%20P111%2C%20P112> ;
	rdfs:label "Identify purpose, scope and level of formality"@en .

obt:Tasks_TA_NeOn_10 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to calculate the precision of the non ontological resources. Software developers and ontology practitioners carry out this task, taking as input the lexical entries extracted for the non ontological resources and the Ontology Requirements Specification Document (ORSD) for compute the precision of the non ontological resources. Precision is a measure widely used in information retrieval [1]. It is defined as the proportion of retrieved material that is actually relevant. To adapt this measure into our context we need to define: {NORLexicalEntries} is the set of lexical entries extracted from the non ontological resource. {ORSDTerminology} is the set of identified terms included in the Ontology Requirements Specification Document (ORSD). Now we can define the precision, in our context, as the proportion of the lexical entries of the non ontological resource that are included in the identified terms of the ORSD over the lexical entries of the non ontological resource. This is expressed as follows: Precision = ({NORLexicalEntries} intersection {ORSDTerminology}/{NORLexicalEntries}) -- [1] R. Baeza-Yates, B. Ribeiro-Neto. Modern Information Retrieval. Addison Wesley. 1999. ISBN 0-201-39829."@en ;
	frbr:realizationOf obt:Procedure_P81 ;
	rdfs:label "Non-ontological Precision Calculation"@en .

obt:Tasks_TA_NeOn_11 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to calculate the coverage of the non ontological resources. Software developers and ontology practitioners carry out this task, taking as input the lexical entries extracted from the non ontological resources and the Ontology Requirements Specification Document (ORSD) for computing the coverage of the non ontological resources. Coverage is based on recall measure used information retrieval [1]. Recall is defined as the proportion of relevant material actually retrieved in answer to a search request. To adapt this measure into our context, we use the aforementioned definition of {NORLexicalEntries} and {ORSDTerminology}. In this context, coverage is the proportion of the identified terms of the ORSD that are included in the lexical entries of the non ontological resource over the identified terms of the ORSD. This is expressed as follows: Coverage = ({NORLexicalEntries} intersection {ORSDTerminology}/{ORSDTerminology}) -- [1] R. Baeza-Yates, B. Ribeiro-Neto. Modern Information Retrieval. Addison Wesley. 1999. ISBN 0-201-39829."@en ;
	frbr:realizationOf obt:Procedure_P82 ;
	rdfs:label "Non-ontological Coverage Calculation"@en .

obt:Tasks_TA_NeOn_12 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to evaluate the consensus of the non ontological resources. Consensus is a subjective and not quantifiable criterion. Domain experts carry out this task taking as input the non ontological resources for stating whether the non ontological resources contain already consensuated terminology by the community or not."@en ;
	frbr:realizationOf obt:Procedure_P83 ;
	rdfs:label "Non-ontological Consensus Evaluation"@en .

obt:Tasks_TA_NeOn_13 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to create an assessment table of the non ontological resources. Software developers and ontology practitioners carry out this task, taking as input the non ontological resources with their respective values for precision, coverage and consensus criteria, for the construction of the assessment table. This table is shown in Table 12. In the first column we include the non ontological resources found. In the precision column we include the calculated precision value for each non ontological resource. In the coverage column we include the calculated coverage value for each non ontological resource. Finally, in the consensus column we include the domain experts� judgment whether the non ontological resource has consensus by the community or not (Yes/No). "@en ;
	frbr:realizationOf obt:Procedure_P84 ;
	rdfs:label "Non-ontological Assessment Table Creation"@en .

obt:Tasks_TA_NeOn_15 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to search and compile all the available documentation about the non ontological resource including purpose, components; data model and implementation details. Domain experts and the ontology development team carry out this activity, taking as input the non ontological resource, searching in the non ontological resource web site and in general purpose search engines, or requesting the documentation directly to the non ontological resource author. "@en ;
	frbr:realizationOf obt:Procedure_P88 ;
	rdfs:label "Non-ontological Resource Documentation Gathering"@en .

obt:Tasks_TA_NeOn_16 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to identify the non ontological resource schema including the conceptual components and their relationships. Domain experts and the ontology development team carry out this activity taking as input the non ontological resource and the documentation obtained in task 1. If the non ontological resource schema is not available in the documentation, the schema should be reconstructed manually or using a data modeling tool."@en ;
	frbr:realizationOf obt:Procedure_P89 ;
	rdfs:label "Non-ontological Resource Schema Extraction"@en .

obt:Tasks_TA_NeOn_17 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to find out how the non ontological resource schema and its content are represented in the data model. Domain experts and the ontology development team carry out this activity taking as input the non ontological resource, the documentation and schema. If the non ontological resource data model is not available in the documentation, the data model should be reconstructed manually or using a data modeling tool."@en ;
	frbr:realizationOf obt:Procedure_P90 ;
	rdfs:label "Non-ontological Resource Data Model Extraction"@en .

obt:Tasks_TA_NeOn_18 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to find out if there is any applicable pattern for reengineering non ontological resources useful to transform the non ontological resource into a conceptual model. The ontology development team carries out this activity taking as input the non ontological resource, the schema and data model. The search for a suitable pattern for reengineering non ontological resource should be done into the NeOn repository of patterns, according to the type of non ontological resource, the data model, and the transformation approach. The transformation approach, explained in section 6.2, refers to: 1) transforming the non ontological resource schema into an ontology schema and the non ontological resource data into instances of the ontology; and 2) transforming the non ontological resource data into an ontology schema."@en ;
	frbr:realizationOf obt:Procedure_P92 ;
	rdfs:label "Non-ontological Resource Reengineering Pattern Search"@en .

obt:Tasks_TA_NeOn_19 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to apply the reengineering pattern obtained in task 4 to transform the non ontological resource into a conceptual model. If a suitable pattern for reengineering non ontological resource is found then the ontology development team creates the conceptual model from the non ontological resource following the procedure established in the pattern for reengineering"@en ;
	frbr:realizationOf obt:Procedure_P93 ;
	rdfs:label "Non-ontological Resource Reengineering Pattern Transformation"@en .

obt:Tasks_TA_NeOn_2 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to establish which are the main intended users of the ontology. Users, domain experts and the ontology development team carry out this task taking as input a set of ontological needs for identifying the intended users, using techniques as physical or virtual interviewers between them. The task output is a list with the intended users, which will be included in the corresponding slot of the OSRD template."@en ;
	frbr:realizationOf obt:Procedure_P104 ;
	rdfs:label "Identify intended ontology users"@en .

obt:Tasks_TA_NeOn_20 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to establish an ad-hoc procedure to map the non ontological resource into a conceptual model, just in case a suitable pattern for reengineering was not found. The ontology development team carries out this task choosing a transformation approach and then building a procedure to carry out the chosen transformation. This ad-hoc procedure may be generalized to create a new pattern for reengineering non ontological resource."@en ;
	frbr:realizationOf obt:Procedure_P94 ;
	rdfs:label "Non-ontological Resource Reengineering Ad-hoc Transformation"@en .

obt:Tasks_TA_NeOn_21 rdf:type obtenv:Task ;
	dcterms:description "The objective of this task is to identify which requirement(s), from the ORSD, can be addressed by ontology design pattern reuse. In many cases different methods will be used for realizing different parts of the requirements, and not all requirements may have suitable patterns available. The first task is to decide what specific requirements to include in the following steps. This task may be integrated with, or done iteratively together with, the next task, which is to select available pattern catalogues. In case no patterns are available to solve a specific type of problem, then those requirements are probably not likely to be amenable by design patterns; instead they should be realized using alternative activities within the NeOn methodology. The selection of requirements may be based on the following (non-exhaustive) list of criteria: ? What requirements are not addressed within other activities yet? ? What requirements do not have trivial solutions?  ? What requirements can be associated with existing pattern types? The first question addresses the organizational aspects of the works, which requirements are not treated yet and require a solution to be developed. The second question addresses the fact that patterns do not usually provide solutions to trivial problems, but represent best practices for solving some commonly occurring, repetitive problems. For example creating a single OWL class is quite trivial, and although there may exist a logical pattern solving this issue it is commonly supported as a basic functionality in ontology design environment and tools, therefore applying a pattern-based methodology would in this case introduce overhead and give no added benefit (over using any graphical ontology editing tool). �Trivial� is a relative concept here, in addition to indicating very small problems, it can also be related to the experience and skills of the developer. If a person is highly experienced and skilled in a certain area, then he might find a problem trivial, i.e. he immediately knows the correct solution to the problem. In this case using patterns again introduces an unnecessary overhead. Requirements where it is not immediately obvious (subjectively) how to represent those in a �good� way are generally ideal candidates for design pattern reuse. For example, how to model an n-ary relation might not be trivial to an inexperienced ontology engineer, in this case a content pattern could help. Finally, in order for the requirement to be solvable but design pattern reuse there must at least be pattern types that solve the kind of problems posed by the requirements (the presence of actual suitable patterns is discussed in the next task). Requirements are included within the ORSD expressed as competency questions (CQs). Different aspects of a CQ may be realized by different kinds of patterns. Below is a list of the available types of OPs and the kinds of problems they are intended to solve (for details see D2.5.1 [1]): ? Correspondence OP � used for either re-engineering or mapping between ontologies. ? Presentation OP � used for naming of elements or for annotating ontologies. ? Reasoning OP � used for introducing certain reasoning capabilities. ? Lexico-syntactic OP � used for linking natural language and ontological elements. ? Structural OP � used for designing the logical structure of ontologies. ? Content OP � used for designing the content of ontologies. Structural and content OPs are generally useful for most kinds of modeling problems, since they address the realization of the CQs into ontology elements and axioms. Lexico-syntactic patterns may additionally be useful if the ontology design team includes novice users (see method in D5.4.1 [2]) or if a text corpus is used as the basis for building the ontology. Presentation OPs are useful if usability aspects of the ontology are deemed important, and correspondence OPs are relevant when building ontology networks by creating mapping between ontologies or when re-engineering other kinds of resources. Reasoning patterns define the kind of reasoning services needed to provide certain types of information. When choosing the requirements to address with ontology design pattern reuse, these available pattern types should be considered, and requirements covered by one or more of these types may be selected.  -- [1] D2.5.1: A Library of Ontology Design Patterns: reusable solutions for collaborative design of networked ontologies. NeOn Project. Available at: http://www.neonproject.org. February 2008. [2] D5.4.1. NeOn Methodology for Building Contextualized Ontology Networks"@en ;
	frbr:realizationOf obt:Procedure_P95 ;
	rdfs:label "Ontology Design Patterns Requirements Identification"@en .

obt:Tasks_TA_NeOn_22 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to identify as many patterns, or rather pattern catalogues, as possible that could help in solving the modelling issues proposed by the requirements selected in the previous task. Catalogues of OPs may be found both in the form of written documents, like D5.1.1 [1] and D2.5.1 [2], and online catalogues like the ontology design pattern portal5. The relevant pattern types of the chosen requirements, identified in the previous task, should guide the search of available pattern catalogues. Aspects to consider when collecting patterns are for example the following: ? Relevant pattern types.  ? Relevant problem domain. ? Pattern provenance and reliability. An example illustrating the criteria above could be the problem of realising a CQ exposing an n-ary relation in the fisheries domain, such as connecting an aquatic resource observation to the observed resource, the time of the observation, and the measured parameters. Both logical and content pattern may be relevant, as well as presentation patterns for increasing usability aspects. The domain is fishery, whereas only general domain independent patterns and pattern for this specific domain should be considered (not for example patterns from the financial domain). If this ontology is to be part of a safety critical system, then only well-known patterns and proven bestpractices would be considered, while in a less safety critical case even pattern candidates (not yet approved by the community) could be considered for inspiration.  -- [1] D5.1.1 NeOn Modelling Components. NeOn Project. Available at: http://www.neon-project.org. March 2007 [2] D2.5.1: A Library of Ontology Design Patterns: reusable solutions for collaborative design of networked ontologies. NeOn Project. Available at: http://www.neonproject.org. February 2008."@en ;
	frbr:realizationOf obt:Procedure_P96 ;
	rdfs:label "Ontology Design Patterns Identification"@en .

obt:Tasks_TA_NeOn_23 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to prepare the set of modeling problems posed by the requirements for matching to the set of available patterns. Pattern-based design is inherently a divide-and-conquer approach, since patterns are restricted and solve a specific problem. In order to match the problem to such small partial solutions and reuse them, the problem needs to be divided into manageable pieces. In addition the problem could be divided in order to let different groups or individuals solve different sub-problems, not all the design team may be working on the same parts of the problem throughout the development. This task could include transformations like writing CQs to represent requirements stated only in example scenario sentences if not already present in the ORSD, and grouping of similar CQs that may be solved together by one or more pattern types if not already present in the ORSD, etc. It is recommended that pattern types that may affect the overall organization of the ontology are treated first, while detailed patterns are treated later. For example, presentation patterns such as naming conventions should be treated at the beginning since this will minimize the refactoring needed when applying the pattern to the solution. Similarly, reasoning patterns and structural patterns in the form of architecture patterns are recommended at an early stage, also in this case to minimize later refactoring. Finally, when the problem has been transformed and divided, one such �manageable piece� (for example, a set of CQs treating a coherent part of the intended ontology and envisioned to be solvable by logical or content patterns) is selected as a starting point. The rest of the tasks may be carried our iteratively, so that each sub-problem is solved before the next one is addressed, or in parallel, so that the sub-problems are divided between groups of designers and all groups solve their specific sub-problems in parallel (all using the tasks specified)."@en ;
	frbr:realizationOf obt:Procedure_P97 ;
	rdfs:label "Ontology Design Patterns Requirements Problem Division"@en .

obt:Tasks_TA_NeOn_24 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to identify which patterns are able to solve which parts of the selected subproblem, if any. How this task is solved is, of course, highly dependent on the type of patterns that are used. The matching procedure will differ a lot between, for example, matching naming pattern or reasoning pattern compared to matching content patterns. This task is identified as one of the hardest tasks of the process, and it is also a key task for the success of the complete process. This makes it the primary candidate for future tool support, but at the moment very little tool support is available. The ontology design pattern portal provides some search functions for finding patterns in the catalogues, but no support for the actual matching. Forthcoming versions of the planned XD plug-in (supporting a specific method for reuse of in the first version mainly content OPs described further lather in this chapter) for the NeOn toolkit will provide more support for pattern-based design and also the matching task. Some simple guidelines may be provided for specific types of OPs (see typology in D2.5.1 [1]). In the previous deliverable, D5.4.1 [2], the support for selecting structural and logical patterns based on natural language and lexico-syntactic patterns was described. For matching naming and annotation patterns usually a manual reading of the guidelines accompanying the patterns is enough, since these patterns are more like guidelines and propose for example naming conventions (in these cases the selection and reuse of the patterns is the more challenging part). For matching correspondence OPs, support is being developed in the field of ontology matching (see for example [3]), but so far no general guidelines exist. Finally, also in the field of matching of content patterns only a few supporting tools may be found, one being the OntoCase approach as presented in [4], where suggestions for suitable content patterns are proposed base on ontology matching, ranking and learning algorithms. To summarize, there are no detailed general guidelines for matching a problem to a pattern at present, even though this is a crucial task within the overall process. More specific guidelines have to be tailored to each of the pattern types (as we shall do later in this chapter, for content patterns), we can only propose two brief general suggestions for performing this task in order to assist the matching: ? Identify the type of patterns that may be suitable for solving the problem (if not already done in previous tasks) and match problem primarily to these kinds of patterns. ? Depending on the type of pattern, use the description of the intent of the pattern to match it to the problem (for content patterns this would mean to match the competency questions it intends to solve to the competency questions of the problem).  -- [1] D2.5.1: A Library of Ontology Design Patterns: reusable solutions for collaborative design of networked ontologies. NeOn Project. Available at: http://www.neonproject.org. February 2008. [2] D5.4.1. NeOn Methodology for Building Contextualized Ontology Networks [3] F. Scharffe, Y. Ding, D. Fensel. Towards correspondence patterns for ontology mediation. In: Proceedings of The Second International Workshop on Ontology Matching, 2007. [4] E. Blomqvist. Pattern Ranking for Semi-automatic Ontology Construction. In: Proccedings of SAC'08: Track on Semantic Web and Applications (SWA), Fortaleza, Brazil, March 16-20, 2008."@en ;
	frbr:realizationOf obt:Procedure_P98 ;
	rdfs:label "Ontology Design Patterns Problem Matching"@en .

obt:Tasks_TA_NeOn_25 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to select a set of patterns to reuse based on the results of the matching done in the previous task. These results may be of varying kind, if a formal method or tool was used then the matching results may be in the form of ranking values of a set of patterns. In that case the selection may be done by setting a threshold value. Still, other things than the individual matching results may be useful to take into account, since there may be overlapping or alternative patterns so that it is perhaps not suitable to select all of them. If manual matching was performed this is a decision-making process, where the usefulness of the pattern is weighted against the overhead of reusing it (instead of for example constructing a new solution). In many cases however it will be sufficient to simply study which patterns cover some part of the problem area and decide to reuse all of them, then applying a manual conflict resolution method in case there are overlaps or other conflicts that arise later."@en ;
	frbr:realizationOf obt:Procedure_P99 ;
	rdfs:label "Ontology Design Patterns Selection"@en .

obt:Tasks_TA_NeOn_26 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to reuse the selected patterns and compose them. How a pattern can be reused is of course again highly dependent on the pattern type. For example to reuse a reasoning pattern may involve to adapt the complete ontology for supporting this particular way of reasoning, as well as selecting a reasoning engine to perform the actual reasoning task. While reusing a content pattern may be to import it into an ontology file and specialise its elements and axioms. Also partial reuse of a pattern is possible, if not the complete pattern is needed or even appropriate. An important part of this task is the composition of patterns. It is rare that a single pattern can solve the complete problem we are trying to address, even if it is very small. In many cases two or more patterns will have to be combined, and this combination task is called pattern composition. Composition of content patterns would involve adding the union of the elements and axioms from the patterns to the resulting ontology, but additionally to connect the elements from different patterns using additional elements and axioms in order to ensure that the pattern really solves the problem (in case of content patterns this is to be able to answer the CQs posed). A certain amount of conflict resolution may be needed if patterns involve contradicting parts, but as stated above partial pattern reuse is also possible. At this stage however the focus is still on the partial selected problem intended to be solved, not on the complete solution for all the selected requirements. Integration of the complete solution is performed later in the process."@en ;
	frbr:realizationOf obt:Procedure_P100 ;
	rdfs:label "Ontology Design Patterns Selection Reuse"@en .

obt:Tasks_TA_NeOn_27 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to test the solution with respect to the selected partial problem at hand and to ensure that it really solves this problem in a correct way. As stated at the beginning a patternbased approach is inherently a divide-and-conquer approach, and this also leads to the possibility to test small and manageable pieces of the solution before finally integrating them into the complete solution. It does not replace the evaluations and revision of the complete solution, but these small �unit tests� are an important part of the process. If the result of the last step is a small ontology then the ontology may be evaluated and tested for example through adding instances and running unit tests and queries corresponding to the CQs of the problem. If the evaluation identifies some problems of the solution then these problems should be addressed in this task, before proceeding to the next. When the solution passed all tests, the iteration continues, by performing tasks 3-7 again on the next partial problem until all problems have been covered, or if the problems were solved in parallel by immediately integrating all solutions."@en ;
	frbr:realizationOf obt:Procedure_P101 ;
	rdfs:label "Ontology Design Patterns Selection Evaluation"@en .

obt:Tasks_TA_NeOn_28 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to integrate the solutions to the partial problems solved by the previous iterations, or by the parallel teams working on different sub-problems. If the division of the problem resulted in a large number of partial tasks the number of partial solutions will also be large and this process may be quite challenging. In practice this integration may be performed after each solution of a small partial problem, instead of at the end of the complete process. The choice of method may depend on the team organisation. If arger design teams work on sub-problems in parallel and integrate their solutions as soon as they finish, the task needs to be performed in a collaborative fashion (supported by collaboration tools like chats, message boards or argumentation tools like Cicero [1]). On the other hand, if only one team is working in an iterative fashion, this task is less collaborative and simply contains the task of integrating one more �piece� into the complete solution. Either way, integration of the solutions is a challenging problem, and may involve refactoring of the whole solution. So far, detailed guidelines of this process are still future work, although technical guidelines for integrating ontologies are of course present. -- [1] K. Dellschaft, H. Engelbrecht, J. MonteBarreto, S. Rutenbeck, S. Staab. (2008). Cicero: Tracking Design Rationale in Collaborative Ontology Engineering. Proceedings of the ESWC 2008 Demo Session"@en ;
	frbr:realizationOf obt:Procedure_P102 ;
	rdfs:label "Ontology Design Patterns Integration"@en .

obt:Tasks_TA_NeOn_3 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to obtain the main ontology intended uses, that is, in which kind of scenarios the ontology will be used. Users, domain experts and the ontology development team carry out this task taking as input a set of ontological needs for identifying the intended uses, using techniques as physical or virtual interviewers between them. The development of an ontology is motivated by scenarios related to the application that will use the ontology. The task output is a list of intended uses in the form of scenarios. Such scenarios describe a set of the ontology�s requirements that the ontology should satisfy after being formally implemented. The scenarios can be described in natural language or expressed in UML as use cases. The list of scenarios will be included in the corresponding slot of the OSRD template."@en ;
	frbr:realizationOf obt:Procedure_P105 ;
	rdfs:label "Identify intended uses"@en .

obt:Tasks_TA_NeOn_4 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to obtain the set of requirements or needs that the ontology should fulfill. Users, domain experts and the ontology development team carry out this task taking as input a set of ontological needs for identifying the ontology requirements, using techniques as writing the requirements in natural language in the form of the so-called competency questions (CQs) and tools as mind map tools, excel, and collaborative tools. The output of this task is a list of competency questions written in Natural Language and a set of answers for the CQs. Different approaches for identifying competency questions can be applied, such as: ? Top-Down: Complex questions are decomposed in simple ones. ? Bottom-Up: Simple questions that are organised to form complex ones. ? Middle out: Mix approach between top-down and bottom-up. "@en ;
	frbr:realizationOf obt:Procedure_P106 ;
	rdfs:label "Identify requirements"@en .

obt:Tasks_TA_NeOn_5 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to group the list of CQs into several categories. Users, domain experts and the ontology development team carry out this task taking as input the list of CQs written in natural language (obtained in task 4) for obtaining different groups of CQs, using techniques as Card Sorting, when the grouping is done manually, and Clustering NL sentences or Information Extraction when the grouping is done automatically; and using tools as MindMap Tools or Cicero Tool (for distributed teams)."@en ;
	frbr:realizationOf obt:Procedure_P107 ;
	rdfs:label "Group requirements"@en .

obt:Tasks_TA_NeOn_6 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to identify possible conflicts between CQs, missing CQs, and contradictions in CQs. Users and domain experts carry out this task taking as input the set of grouped CQs for deciding if such CQs are valid or not. The task output is a confirmation about the validity of the set of CQs."@en ;
	frbr:realizationOf obt:Procedure_P108 ;
	rdfs:label "Validate the set of requirements"@en .

obt:Tasks_TA_NeOn_7 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to give different levels of priority to the different groups of CQs, and within each group to the identified requirements (in the form of CQs). Users, domain experts and the ontology development team carry out this task taking as input the groups of CQs written in natural language (obtained in task 5) for obtaining the priorities for each group and for each CQs within a group. The task output is a set of priorities attached to each group of CQs and to each CQ in a group. Priorities in CQs will be used for planning the ontology development. This task is optional, but recommended. In fact, if no priorities are given to the groups of CQs, the ontology development will model all requirements at the same time."@en ;
	frbr:realizationOf obt:Procedure_P109 ;
	rdfs:label "Prioritize requirements"@en .

obt:Tasks_TA_NeOn_8 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to extract from the list of CQs a pre-glossary to be used in the conceptualization activity. The ontology development team carries out this task taking as input the list of identified CQs and their answers for obtaining a list of the most used terms in them, using terminology extraction techniques and tools supporting such techniques. From the requirements in form of competency questions, we extract the terminology (names, adjectives and verbs) that will be formally represented in the ontology by means of concepts, attributes and relations. From the answers to the CQs we extract the objects in the universe of discourse that will be represented as instances."@en ;
	frbr:realizationOf obt:Procedure_P110 ;
	rdfs:label "Extract terminology and its frequency"@en .

obt:Tasks_TA_NeOn_9 rdf:type obtenv:Task ;
	dcterms:description "The goal of this task is to extract the lexical entries of the non ontological resources. Software developers and ontology practitioners carry out this task taking as input the non ontological resources for extracting their lexical entries using terminology extraction tools."@en ;
	frbr:realizationOf obt:Procedure_P80 ;
	rdfs:label "Lexical Entries Extraction"@en .

obt:Tasks_TA_SAMOD-15 rdf:type obtenv:Task ;
	dcterms:description "set TBox_n as new current model (TBox)"@en ;
	frbr:realizationOf obt:Procedure_P128 ;
	rdfs:label "Set TBox_n as new TBox"@en .

obt:Tasks_TA_SAMOD_1 rdf:type obtenv:Task ;
	dcterms:description "OEs and DEs work together to write down a motivating scenario MSn, being as close as possible to the language DEs commonly use for talking about the domain. An example of motivating scenario is illustrated in Table 1."@en ;
	frbr:realizationOf obt:Procedure_P114 ;
	rdfs:label "Write a Motivation Scenario (MS) SAMOD"@en .

obt:Tasks_TA_SAMOD_10 rdf:type obtenv:Task ;
	dcterms:description "to define a new model TBoxn merging (If in is actually i1, then the modeletn becomes the current model since no previous model is actually available. ) of the current model with modeletn. Namely, OEs must add all the axioms from the current model and modeletn to TBoxn and then collapse semantically-identical entities, e.g., those that have similar local names and that represent the same entity from a semantic point of view (e.g., Person and HumanBeing);"@en ;
	frbr:realizationOf obt:Procedure_P123 ;
	rdfs:label "Define a new TBox model"@en .

obt:Tasks_TA_SAMOD_11 rdf:type obtenv:Task ;
	dcterms:description "to update all the test cases in BoT, swapping the TBox of each test case with TBox_n and refactoring each ABox and SQ according to the new entity names if needed, so as to refer to the more recent model;"@en ;
	frbr:realizationOf obt:Procedure_P124 ;
	rdfs:label "Update Bag of Test-cases (BoT)"@en .

obt:Tasks_TA_SAMOD_12 rdf:type obtenv:Task ;
	dcterms:description "Given as input a motivating scenario, the model formalising it and the related glossary of terms � a model test aims at checking the validity of the model against formal requirements, where: � checking for formal requirements means understanding whether the model is consistent and, if needed, whether it also complies with appropriate unit tests [1] (Only formal requirements, and against all test-cases in BoT) -- [1] Vrandecic, D., & Gangemi, A. (2006). Unit Tests for Ontologies. In On the Move to Meaningful Internet Systems 2006: OTM 2006 Workshops: 1012-1020. http: //dx.doi.org/10.1007/11915072_2"@en ;
	frbr:realizationOf obt:Procedure_P125 ;
	rdfs:label "Model test BoT formal SAMOD"@en .

obt:Tasks_TA_SAMOD_13 rdf:type obtenv:Task ;
	dcterms:description "Given as input a motivating scenario, the model (TBox) formalising it and a dataset (ABox) built according to the model, and considering the examples described in the motivating scenario, a data test aims at checking the validity of the model and the dataset and against formal requirements, where: � checking for formal requirements means understanding whether the model (TBox) is still consistent when considering the exemplar dataset (ABox) (Only formal requirements, and against all test-cases in BoT)"@en ;
	frbr:realizationOf obt:Procedure_P126 ;
	rdfs:label "Data test BoT formal SAMOD"@en .

obt:Tasks_TA_SAMOD_14 rdf:type obtenv:Task ;
	dcterms:description "\"Given as input a model (TBox), a related dataset (ABox), a set of informal competency questions, and a set formal queries written in SPARQL, each mapping a particular informal competency question, a query test aims at checking the validity of the model, the dataset and each SPARQL query against formal requirements, where: � checking for formal requirements means understanding whether each SPARQL query is well-formed and can correctly run on the TBox+ABox (only formal requirements, and against all test-cases in BoT)"@en ;
	frbr:realizationOf obt:Procedure_P127 ;
	rdfs:label "Query test BoT formal SAMOD"@en .

obt:Tasks_TA_SAMOD_2 rdf:type obtenv:Task ;
	dcterms:description "Given a motivating scenario, OEs and DEs should produce a set of informal competency questions CQn, each of them identified appropriately. An example of an informal competency question, formulated starting from the motivating scenario in Table 1, is illustrated in Table 2."@en ;
	frbr:realizationOf obt:Procedure_P106 ;
	rdfs:label "Produce a set of informal competency questions SAMOD"@en .

obt:Tasks_TA_SAMOD_3 rdf:type obtenv:Task ;
	dcterms:description "Now, having both a motivating scenario and a list of informal competency questions, KEs and DEs write down a glossary of terms GoTn. An example of glossary of terms is illustrated in Table 3."@en ;
	frbr:realizationOf obt:Procedure_P18 ;
	rdfs:label "Write a Glossary of Terms SAMOD"@en .

obt:Tasks_TA_SAMOD_4 rdf:type obtenv:Task ;
	dcterms:description "The remaining part of this step is led by OEs only, who are responsible of developing a modelet according to the motivating scenario, the informal competency questions and the glossary of terms. Note that it is possible that multiple entities (i.e. classes, properties, individuals) are actually hidden behind one single definition in the glossary of terms. In doing that work, they must strictly follow the following principles:         * Keep it small. Keeping the number of developed ontology entities small is essential when developing an ontology. In fact, by making  small changes (and retesting frequently, as our framework prescribes), one always has a good idea of what change has caused an error in the model  [2]. Moreover, according to Miller [9], averagely OEm cannot hold in working memory more than a small number of object. Thus,  OEm should define at most N classes, Nindividuals, Nattributes (i.e., data properties) and Nrelations (i.e., object properties), where N  is the Miller�s magic number �7 � 2�.         * Use patterns. In thinking what is the best way to model a particular aspect of the domain, OEm should take into consideration  existing knowledge. In particular, we strongly encourage to look at documented patterns � the Semantic Web Best Practices and  Deployment Working Group page (http://www.w3.org/2001/sw/BestPractices/OEP/) and the Ontology Design Patterns portal (http://www.ontologydesignpatterns.org/ are both valuable examples � and at widely-adopted Semantic Web vocabularies � such as FOAF (http://xmlns.com/foaf/spec) for people, SIOC (http://rdfs.org/sioc/spec) for social communities, and so on.         * Middle-out development. Defining firstly the most relevant concepts (the basic concepts) and latterly adding the most abstract and  most concrete ones, the middle-out approach [14] allows one to avoid unnecessary effort during the development because detail  arises only as necessary, by adding sub- and super-classes to the basic concepts. Moreover, this approach, if used properly, tends to  produce much more stable ontologies, as stated in [13].         * Keep it simple. The modelet must be designed according to the information obtained previously (motivating scenario, informal  competency questions, glossary of terms) in an as quick as possible way, spending the minimum effort and without adding any  unnecessary semantic structure. In particular, do not think about inference at this stage, while think about describing the motivating  scenario fully.         * Self-explanatory entities. The aim of each ontological entity must be understandable by humans simply looking at its local name  (i.e., the last part of the entity IRI). Therefore, no labels and comments have to be added at this stage and all the entity IRIs must not  be opaque. In particular, class local names has to be capitalised (e.g., Justification) and in camel-case notation if composed by more  than one word (e.g., DescriptionOfVagueness). Property local names has to be non-capitalised and in camel-case notation if  composed by more than one word; moreover, each property local name must start with a verb (http://www.jenitennison.com/2009/09/13/naming-properties-and-relations.html) (e.g., wasAttributedTo) and, in case  of data properties, it has to be followed by the name of the object referred (e.g., hasNaturalLanguageText). Individual local names  must be non-capitalised (e.g., ceo) and dash-separated if composed by more than one word (quantitative-vagueness). The goal of OEm is to develop a modeletn, eventually starting from a graphical representation written in a proper visual language, such as UML [3], E/R model [4] and Graffoo [5], so as to convert it automatically in OWL by means of appropriate tools, e.g., DiTTO [7]. Starting from the OWL version modeletn, OEs proceed in four phases: -- [2] Beck, K. (2003). Test-driven development by example. Addison-Wesley. ISBN: 978-0321146533 [3[ Brockmans, S., Volz, R., Eberhart, A., L�ffler, P. (2004). Visual Modeling of OWL DL Ontologies Using UML. In Proceedings of the 3rd International Semantic Web Conference (ISWC 2004): 7�11. http://dx.doi.org/10.1007/978-3-540-30475-3_15 [4] Chen, P. P. (1974). The Entity-Relationship Model: Toward a Unified View of Data. ACM Transactions on Database Systems, 1 (1): 9�36. http://dx.doi.org/ 10.1145/320434.320440 [5] Falco, R., Gangemi, A., Peroni, S., Vitali, F. (2014). Modelling OWL ontologies with Graffoo. In The Semantic Web: ESWC 2014 Satellite Events: 320�325. http: //dx.doi.org/10.1007/978-3-319-11955-7_42 [7] Gangemi, A., Peroni, S. (2013). DiTTO: Diagrams Transformation inTo OWL. In Proceedings of the ISWC 2013 Posters & Demonstrations Track. http://ceurws.org/Vol-1035/iswc2013_demo_2.pdf [9] Miller, G. A. (1956). The magical number seven, plus or minus two: Some limits on our capacity for processing information. Psychological Review, 63 (2): 81�97. http://dx.doi.org/10.1037/h0043158 [13] M. Uschold, M. Gruninger, Ontologies: principles, methods and applications, Knowl. Eng. Rev. 11 (2) (1996). [14] Towards a Methodology for Building Ontologies. In Workshop on Basic Ontological Issues in Knowledge Sharing. http://www.aiai. ed.ac.uk/publications/documents/1995/95-ont-ijcai95-ont-method.pdf "@en ;
	frbr:realizationOf obt:Procedure_P117 ;
	rdfs:label "Developing a modelet SAMOD"@en .

obt:Tasks_TA_SAMOD_5 rdf:type obtenv:Task ;
	dcterms:description "Given as input a motivating scenario, the model formalising it and the related glossary of terms � a model test aims at checking the validity of the model against formal and rhetorical requirements, where: � checking for formal requirements means understanding whether the model is consistent and, if needed, whether it also complies with appropriate unit tests [1]; � checking for rhetorical requirements means understanding whether the model covers the related motivating scenario and whether the vocabulary used by the model is appropriate. -- [1] Vrandecic, D., & Gangemi, A. (2006). Unit Tests for Ontologies. In On the Move to Meaningful Internet Systems 2006: OTM 2006 Workshops: 1012-1020. http: //dx.doi.org/10.1007/11915072_2"@en ;
	frbr:realizationOf obt:Procedure_P118 ;
	rdfs:label "Model test modelet_n formal and rhetorical SAMOD"@en .

obt:Tasks_TA_SAMOD_6 rdf:type obtenv:Task ;
	dcterms:description "create an exemplar dataset ABox_n that formalises all the examples introduced in the motivating scenario according to modelet_n."@en ;
	frbr:realizationOf obt:Procedure_P119 ;
	rdfs:label "Create ABox example"@en .

obt:Tasks_TA_SAMOD_7 rdf:type obtenv:Task ;
	dcterms:description "Given as input a motivating scenario, the model (TBox) formalising it and a dataset (ABox) built according to the model, and considering the examples described in the motivating scenario, a data test aims at checking the validity of the model and the dataset and against formal and rhetorical requirements, where: � checking for formal requirements means understanding whether the model (TBox) is still consistent when considering the exemplar dataset (ABox); � checking for rhetorical requirements means understanding whether the dataset completely describes all the examples accompanying the motivating scenario, and whether the model is enough self-explanatory to be used quickly by humans for building datasets without spending a lot of effort in understanding it."@en ;
	frbr:realizationOf obt:Procedure_P120 ;
	rdfs:label "Data test modelet_n formal and rhetorical SAMOD"@en .

obt:Tasks_TA_SAMOD_8 rdf:type obtenv:Task ;
	dcterms:description "write formal queries SQn as many informal competency questions related to the motivating scenario."@en ;
	frbr:realizationOf obt:Procedure_P121 ;
	rdfs:label "Write formal queries SAMOD"@en .

obt:Tasks_TA_SAMOD_9 rdf:type obtenv:Task ;
	dcterms:description "Given as input a model (TBox), a related dataset (ABox), a set of informal competency questions, and a set formal queries written in SPARQL, each mapping a particular informal competency question, a query test aims at checking the validity of the model, the dataset and each SPARQL query against formal and rhetorical requirements, where: � checking for formal requirements means understanding whether each SPARQL query is well-formed and can correctly run on the TBox+ABox; � checking for rhetorical requirements means understanding whether each informal competency question is mapped into an appropriate SPARQL query and whether, running each of them upon the TBox+ABox, the result conforms to the expected outcome of each informal competency question and in the ABox."@en ;
	frbr:realizationOf obt:Procedure_P122 ;
	rdfs:label "Query test modelet_n formal and rhetorical SAMOD"@en .

obt:Tasks_TA_UPON_1 rdf:type obtenv:Task ;
	dcterms:description "Circumscribing the domain of interest is a fundamental step [1], to focus on the appropriate fragment of reality to be modeled. If the  domain is large, two or more subdomains may also be determined. As anticipated, in this work the domain addressed to validate the UPON methodology is eBusiness. Specifically, the eProcurement  subdomain, i.e., the business-to-business (B2B) purchasing and selling goods and services over the Internet [http://dictionary.bnet.com/definition/E-procurement.html], has been  addressed. Defining the scope of the ontology consists in the identification of the most important concepts to be represented, with their  characteristics, thus pushing the refinement to the suitable granularity. To this end, a set of ontological commitments [2] is required,  bringing some part of the domain into focus at the (required and expected) expense of other parts that will be less represented or  neglected. Following Guarino et al. [2], the ontological commitment can be seen as ��a mapping between a language and something which can  be called an ontology��. In this preliminary stage, it can be seen as a set of statements that allows one to identify a first set of terms as  representatives of ontology concepts. Usually at this stage modelers have only a vague idea of the position that each concept will assume within the ontology, i.e., the  semantic interconnections between pairs of concepts. If necessary, each term can be informally annotated by DE for further  development during subsequent iterations. -- [1] Towards a Methodology for Building Ontologies. In Workshop on Basic Ontological Issues in Knowledge Sharing. http://www.aiai. ed.ac.uk/publications/documents/1995/95-ont-ijcai95-ont-method.pdf [2] N. Guarino, M. Carrara, P. Giaretta, Formalizing Ontological Commitments, in: Proceedings of AAAI 94, vol. 1, 1994, pp. 560�567."@en ;
	frbr:realizationOf <https://w3id.org/ontoboldt/ns/ontoboldt#Procedure_P111%2C%20P113> ;
	rdfs:label "Determining domain of interest and scope"@en .

obt:Tasks_TA_UPON_10 rdf:type obtenv:Task ;
	dcterms:description "A first version of a glossary is built by using the RL and by adding informal definitions (i.e., natural language sentences) to the terms. In essence, the RL evolves into a reference glossary (Fig. 9) by associating one or more definitions to each term. The definitions should be selected from knowledgeable sources and agreed among DEs and users. An excerpt from the reference glossary for the AIDIMA eProcurement domain is reported in Table 4. In this application the reference glossary contains 139 glossary entries."@en ;
	frbr:realizationOf obt:Procedure_P18 ;
	rdfs:label "Building the reference glossary (RG)"@en .

obt:Tasks_TA_UPON_11 rdf:type obtenv:Task ;
	dcterms:description "Modeling concepts. Each concept is categorized by associating a ��kind�� to it. Here we adopt the categories proposed by OPAL. These  include the major ontological categories, according to proposals of top ontologies, such as [1], or meta-ontologies [2,3,4], and  they are deeply inspired by the primary modeling constructs of UML. OPAL organizes concepts in three primary and some  complementary categories. The primary categories are:         * business actor: gathering active elements of a business domain, able to activate, perform, or monitor a business process. DEs, in  analyzing the reality, are asked to identify relevant actors that operate producing, updating or consuming business objects (BOs). In  the eProcurement example, 15 business actors have been identified (Table 5).         * business object: an entity on which a business process operates. A business object document (BOD) is a further refinement of a BO  that represents a category of documents in the business domain. In the AIDIMA scenario 14 BODs, belonging to the client and the  supplier, have been identified (Table 6).         * business process: a business activity or operation aimed at the satisfaction of a business goal, operating on a set of BOs (e.g.,  purchase order issuing, requesting quotation). It can be rather simple, with a limited duration in time, or complex, with parallel branches and phases3 that last for a long time span. In the eProcurement example 19  business processes have been identified (Table 7). Having presented the primary concept categories of OPAL, we now introduce the complementary categories, necessary to complete  a rich ontological representation of the observed reality.         * Message: A message represents the information exchanged during an interaction (e.g., request, response) between processes  (someone prefers to say ��among actors��, but we prefer to focus on the processes that need to exchange info). A message is  characterized by a content that is typically a BOD (e.g., a RFQ-message, carrying a request for quotation). In OPAL we adopted the FIPA [WR8] approach,  based on 23 message types, related to different kinds of communicative acts. Specifically, we selected 8 message kinds for which the  payload matches a BOD in the eProcurement ontology. Table 8 shows the 8 selected message kinds matched with their  corresponding BODs in the eProcurement application.         * Attribute: Attributes characterize the information structure of a concept. In OPAL there are atomic attributes, modeling elementary  information (e.g., street name), and complex attributes, modeling structured information (e.g., address). Essentially, a complex  attribute is defined as an aggregation of lower level complex and/or atomic attributes. Table 9 reports the list of 83 attributes  identified in the eProcurement example. -- [1] J. Sowa, Knowledge Representation: Logical, Philosophical and Computational Foundations, Brooks/Cole, USA, 1999. [2] Towards a Methodology for Building Ontologies. In Workshop on Basic Ontological Issues in Knowledge Sharing. http://www.aiai. ed.ac.uk/publications/documents/1995/95-ont-ijcai95-ont-method.pdf [3] M. Missikoff, F. Taglino, An ontology-based platform for semantic interoperability, in: S. Staab, R. Studer (Eds.), Handbook on Ontologies, Springer, 2004, pp. 617�633. [4] M. Missikoff, F. Taglino, Business and enterprise management with SymOntoX, in: First International Semantic Web Conference, Sardinia, Italy, 2002."@en ;
	frbr:realizationOf obt:Procedure_P13 ;
	rdfs:label "Modeling concepts"@en .

obt:Tasks_TA_UPON_12 rdf:type obtenv:Task ;
	dcterms:description "At this stage, concepts are hierarchically organized and formal relations are introduced. A first step consists in organizing the  concepts in a taxonomic hierarchy according to the generalization (i.e., IsA) relation. To this end, three main approaches are known in the literature [1]:  top-down (from general to particular),  bottom-up (from particular to general) and  middle-out (or combined).  The combined approach  consists in finding first the salient concepts (typically placed in a middle area) and then generalizing and specializing them. This  approach is considered to be the most effective because concepts ��in the middle�� tend to be more informative about the domain. The resulting taxonomy can be extended with other relations, i.e., part-of and domain-specific relationships. The outcome of this  step is a SN,4 that is represented according to UML class diagram, in particular using generalization (IsA), aggregation (part-of) and  association. Therefore the SN can be represented in a diagrammatic format (see Figs. 11 and 12 for examples). Finally, this workflow  eventually provides a diagrammatic representation of the ontology in the form of a set of UML class diagrams. -- [1] M. Uschold, M. Gruninger, Ontologies: principles, methods and applications, Knowl. Eng. Rev. 11 (2) (1996). "@en ;
	frbr:realizationOf obt:Procedure_P13 ;
	rdfs:label "Modeling concepts hierarchies and domain specific relationships"@en .

obt:Tasks_TA_UPON_13 rdf:type obtenv:Task ;
	dcterms:description "Semantic Quality can be mainly verified by checking the consistency of the ontology, achieved by using a reasoner, such as Racer [1] or Pellet [http://www.mindswap.org/2003/pellet].  Consistency, besides absence of contradiction, requires also that the modeling constructs are correctly used (e.g., absence of cycles in the specialization hierarchy or the fact that classes and properties are disjoint  [2]). The activity concerning consistency checking is mainly performed by KEs, as shown in the expert involvement schema of Fig.  15, since the use of a reasoner requires technical skills. -- [1] V. Haarslev, R. M�ller, Description of the RACER system and its applications, in: Proceedings of the International Workshop on Description Logics (DL-2001), Stanford, USA, 2001. [2] N. Ide, J. Ve� ronis, Extracting Knowledge Bases from Machine-Readable Dictionaries: Have We Wasted Our Time?, KB&KS �93 Workshop, Tokyo, 1993, pp. 257�266. "@en ;
	frbr:realizationOf obt:Procedure_P55 ;
	rdfs:label "Consistency checking UPON"@en .

obt:Tasks_TA_UPON_14 rdf:type obtenv:Task ;
	dcterms:description "Pragmatic quality is related to three features: (i) fidelity, (ii) relevance, and (iii) completeness. Relevance is checked in conjunction with completeness, verifying the correct implementation of ontology�s requirements, gathered  in the first workflow. This can be achieved, for instance, by performing the following two kinds of test. The first concerns the  coverage of the ontology over the application domain. For instance, a DE is asked to semantically annotate the UML diagrams,  modeling a software application, with the ontology concepts. The second test concerns the CQs and the possibility to answer them  by using the ontology content. For instance, in the eProcurement application such a test gives a positive result, since it is possible to  answer all the CQs listed in the example. For instance, CQ1: ��what are the documents that a company receives before a purchase  order?�� is elaborated using the ontology concepts ��Request For Quotation��, ��Processing RFQ��, ��Sending RFQ��. This test is  particularly useful for ontologies supporting the semantic search and discovery of web resources."@en ;
	frbr:realizationOf obt:Procedure_P55 ;
	rdfs:label "Verifying Coverage UPON"@en .

obt:Tasks_TA_UPON_15 rdf:type obtenv:Task ;
	dcterms:description "Pragmatic quality is related to three features: (i) fidelity, (ii) relevance, and (iii) completeness. Completeness: according to [1] a design artefact, like an ontology, is complete and effective when it satisfies the requirements and  the constraints of the problem it was meant to solve. For this reason, the completeness of an ontology can be assessed by using the  domain goals and again the coverage and CQs. Consequently an ontology is complete if the objectives, defined in the requirements  workflow, are reached (e.g., semantic search and retrieval, reconciliations of data messages and processes in the eProcurement  application). -- [1] A. Hevner, S. March, J. Park, S. Ram, Design science in information systems research, MIS Q. 28 (1) (2004)."@en ;
	frbr:realizationOf obt:Procedure_P56 ;
	rdfs:label "Answering Competency Questions UPON"@en .

obt:Tasks_TA_UPON_2 rdf:type obtenv:Task ;
	dcterms:description "The reason for having an ontology, its intended uses, and kinds of target users must be established. In the eProcurement application,  the goal of the ontology is to provide a better understanding of the domain of interest and to support a number of semantic services  for ontology users (i.e., clients and suppliers in the purchasing processes). In particular, three basic uses of the ontology can be  envisaged:         * resource discovery and retrieval, e.g., for semantically enriched documents or web services;         * ontology-based reconciliation of data messages exchanged between sender and receiver business actors in business transactions  [1];         * ontology-based mediation of business processes belonging to two different business partners (e.g., the steps in a purchasing  activity). -- [1] M. Missikoff, F. Taglino, An ontology-based platform for semantic interoperability, in: S. Staab, R. Studer (Eds.), Handbook on Ontologies, Springer, 2004, pp. 617�633."@en ;
	frbr:realizationOf <https://w3id.org/ontoboldt/ns/ontoboldt#Procedure_P103%2C%20P104> ;
	rdfs:label "Defining business purpose"@en .

obt:Tasks_TA_UPON_3 rdf:type obtenv:Task ;
	dcterms:description "In this step the DE is asked to write a panel or series of panels of rough sketches outlining the sequence of the activities that take  place in a particular scenario. Storyboards (modeling contexts and situations in a narrative way) can be used in this activity. In particular, a storyboard is related to a particular scenario of  the realization of one or more business purposes. In the considered eProcurement application, a storyboard sounds as follows: \t* ��The ACME manufacturer (client) sends a request for quotation (RFQ) to the EMCA provider (supplier). The supplier processes the  RFQ and sends back his quotation to the client. The client evaluates the quotation and, possibly, makes the purchase order (PO) that  is sent to the supplier. The supplier accepts the purchase order, fulfills it, delivers the goods, and sends the invoice to the client.  Finally, if the delivered goods correspond to the order, the client pays the invoice.�� "@en ;
	frbr:realizationOf obt:Procedure_P114 ;
	rdfs:label "Writing storyboards"@en .

obt:Tasks_TA_UPON_4 rdf:type obtenv:Task ;
	dcterms:description "Creating the AL, by collecting the terminology from DE and application-specific documents. The storyboard is used to extract the  terminology. Then a preliminary version of the AL is built. This task can be supported by using some automatic tools to extract  knowledge from textual documents, such as OntoLearn [1], Text-To-Onto [https://sourceforge.net/projects/texttoonto/], or similar tools. In the eProcurement example, the  AL contains 212 terms, mainly extracted from documents representing the reference XML schemas of AIDIMA business documents.  An excerpt of the AL is reported in Table 1. -- [1] R. Navigli, P. Velardi, Learning domain ontologies from document warehouses and dedicated websites, Computat. Linguist. 30 (2) (2004) MIT Press. "@en ;
	frbr:realizationOf obt:Procedure_P115 ;
	rdfs:label "Create Application Lexicon"@en .

obt:Tasks_TA_UPON_5 rdf:type obtenv:Task ;
	dcterms:description "CQs are questions at a conceptual level1 an ontology must be able to answer [1]. They are essentially identified through interviews  with DEs and end-users brainstorming. The questions are used during the test workflow to evaluate the ontological commitments  that have been made and, more in general, the coverage (related to domain circumscription) and the depth (level of detail of the ontology to be built). According to the main objectives of an ontology, CQs can  be of two different kinds: oriented either to resource discovery and retrieval or to reconciliation (within a semantic interoperability  solution). Some examples of CQs in the eProcurement application are presented in Table 2. -- [1] M. Gruninger, M.S. Fox, Methodology for the design and evaluation of ontologies, in: Proceedings of the Workshop on Basic Ontological Issues in Knowledge Sharing in IJCAI 95, Montreal, Canada, 1995 "@en ;
	frbr:realizationOf obt:Procedure_P106 ;
	rdfs:label "Identifying Competency Questions UPON"@en .

obt:Tasks_TA_UPON_6 rdf:type obtenv:Task ;
	dcterms:description "UPON proposes to address CQs by using use-case models. According to UML, a use-case model contains a number of use cases that  serve as a basis to specify the expected use of the ontology. This model is a result of an agreement among different users (i.e., who  will use the ontology for a business purpose) achieved with the support of ontology modelers. In the context of ontologies, use cases  correspond to knowledge paths through the ontology, to be followed for achieving business operations and answering CQs. Use  cases will be detailed during the analysis and design workflows; here, in the requirements workflow, they are identified and  prioritized. The result will help indicate which use cases should be addressed during early iterations, and which ones can be  postponed. An example of a use-case model with the corresponding CQis reported in Fig. 4."@en ;
	frbr:realizationOf <https://w3id.org/ontoboldt/ns/ontoboldt#Procedure_P105%2C%20P109> ;
	rdfs:label "Identifying and Prioritizing Use-Cases UPON"@en .

obt:Tasks_TA_UPON_7 rdf:type obtenv:Task ;
	dcterms:description "The DL is built by gathering the terminology used in the domain of interest, mainly extracted by analyzing existing documental resources, such as reports, technical manuals, standards, glossaries, thesauri, legacy computational lexicons, and available ontologies. This step, like in the case of the AL, can be supported by automatic tools for text mining. This activity inherently adheres to the view of a linguistic ontology [1] in which concepts are anchored to textual descriptions, i.e. they have a counterpart in natural language. In our project, to build the eBusiness DL, an important role has been played by standards. The DEs considered the following eBusiness standards: ebXML [http://www.ebxml.org], RosettaNET [http://www.rosettanet.org], and OAGIS [http://www.openapplications.org]. The analysis of these standards allowed 2613 elements to be extracted (140 from ebXML, 1873 from RosettaNET, 600 from OAGIS, The analysis was manually performed by the domain experts.); then a consistent filtering has been necessary. In fact, since many elements from these standards pertain to specific industry sectors (e.g., elements coming from RosettaNet mainly refer to the high-tech electronic industry), a first manual pruning was performed. Then terminological analysis was done against the corpus of documents of reference, to identify specific (frequently used in eProcurement) terms to be included in the DL. Furthermore, DEs decided to include in the DL, all the terms present in at least two standards. Other terms were included only after approval from a wider panel of experts. After this activity, the DL contained 114 terms (not considering synonyms). (An excerpt of the DL is reported in Table 3.) In a simplified vision, useful for our example, these 114 terms represent the core of the initial 2613 terms. Fig. 6 sketchily reports the composition of the DL, with respect to the originating resources. -- [1] A. Go� mez-Pe� rez, M. Ferna� ndez-Lopez, O. Corcho, Ontological Engineering, Springer, London, 2004. "@en ;
	frbr:realizationOf obt:Procedure_P30 ;
	rdfs:label "Acquiring domain resources and building Domain Lexicon (DL)"@en .

obt:Tasks_TA_UPON_8 rdf:type obtenv:Task ;
	dcterms:description "The RL is built by selectively merging the AL (from application DEs) and the DL (from existing external resources). During the merge of the two lexicons, the terms are grouped into three major areas: one intersection area and two disjoint areas, application specific and domain specific (see Fig. 7). To build the RL the following ��inclusion policy�� is used: the RL should include all the terms coming from the intersection area and, after the users and DEs approval, some terms belonging to the disjoint areas. Therefore the intersection area will be extended, on the one hand, with domain terms, considered useful for a better specification of the application at hand, and, on the other hand, with a part of the remaining application terms that are considered relevant, even if not extensively used by other applications. The output is a RL. In the eProcurement application, it contains 139 terms."@en ;
	frbr:realizationOf obt:Procedure_P116 ;
	rdfs:label "Building Reference Lexicon"@en .

obt:Tasks_TA_UPON_9 rdf:type obtenv:Task ;
	dcterms:description "The goal of this activity is to model the application scenario, adding to the use-case diagrams, drawn in the Requirements Workflow, the activity and class diagrams. UML diagrams represent a model of the application and will be used for the validation of the ontology. All classes, actors, and activities modeled in UML must have a corresponding concept in the ontology. In Fig. 8, three representative UML diagrams, drawn for the eProcurement application, are reported. Please note, in the Class Diagram (Fig. 8c), the use of the 5Objectb profile. UML profiles are used to properly categorize the terms, according to the OPAL ontology representation methodology [1] (see below). -- [1] F. D�Antonio, M. Missikoff, F. Taglino, Formalizing the OPAL eBusiness ontology design patterns with OWL, in: Third International Conference on Interoperability for Enterprise Applications and Software, I-ESA 2007."@en ;
	frbr:realizationOf obt:Procedure_P18 ;
	rdfs:label "Modeling application scenario using UML"@en .

obt:Techniques_TE1 rdf:type obtenv:Technique ;
	rdfs:label "Brainstorming Ontology Requirements"@en .

obt:Techniques_TE2 rdf:type obtenv:Technique ;
	rdfs:label "Joint application development"@en .

obt:Techniques_TE3 rdf:type obtenv:Technique ;
	rdfs:label "Use-cases based on templates"@en .

obt:Techniques_TE4 rdf:type obtenv:Technique ;
	rdfs:label "Interviews"@en .

obt:Techniques_TE5 rdf:type obtenv:Technique ;
	rdfs:label "Competency Questions"@en .

